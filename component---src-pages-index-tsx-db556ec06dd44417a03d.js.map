{"version":3,"file":"component---src-pages-index-tsx-db556ec06dd44417a03d.js","mappings":"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","sources":["webpack://sam-mccathie.github.io/./src/context/theme-context/ThemeContext.tsx","webpack://sam-mccathie.github.io/./src/context/theme-context/useTheme.ts","webpack://sam-mccathie.github.io/./src/context/ScrollContext.tsx","webpack://sam-mccathie.github.io/./src/components/button/Button.tsx","webpack://sam-mccathie.github.io/./src/components/header/components/NavButtons.tsx","webpack://sam-mccathie.github.io/./src/components/header/helpers/generateNavSections.ts","webpack://sam-mccathie.github.io/./src/components/header/helpers/handleScroll.ts","webpack://sam-mccathie.github.io/./src/helpers/scrollToTop.ts","webpack://sam-mccathie.github.io/./src/svgs/LinkedInSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/SunSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/MoonSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/HamburgerSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/EmailSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/GitHubSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/JavaScriptSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/CSSSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/ExpressSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/NodeJSSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/PhpSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/ReactSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/TypeScript.tsx","webpack://sam-mccathie.github.io/./src/svgs/GraphQLSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/NavArrowSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/AzureSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/CopilotSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/DockerSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/FigmaSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/GitSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/JiraSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/SlackSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/TeamsSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/TrelloSVG.tsx","webpack://sam-mccathie.github.io/./src/svgs/CloseSVG.tsx","webpack://sam-mccathie.github.io/./src/components/header/components/ThemeToggle.tsx","webpack://sam-mccathie.github.io/./src/components/header/components/HamburgerMenu.tsx","webpack://sam-mccathie.github.io/./src/components/header/components/HeaderLayout.tsx","webpack://sam-mccathie.github.io/./src/components/header/Header.tsx","webpack://sam-mccathie.github.io/./src/components/about/components/Profile.tsx","webpack://sam-mccathie.github.io/./src/components/about/About.tsx","webpack://sam-mccathie.github.io/./src/components/pages/Home.tsx","webpack://sam-mccathie.github.io/./src/data/technologies.ts","webpack://sam-mccathie.github.io/./src/data/tools.ts","webpack://sam-mccathie.github.io/./src/data/roles.ts","webpack://sam-mccathie.github.io/./src/components/skills/components/SkillIcon.tsx","webpack://sam-mccathie.github.io/./src/components/skills/components/SkillIcons.tsx","webpack://sam-mccathie.github.io/./src/components/skills/components/Carousel.tsx","webpack://sam-mccathie.github.io/./src/components/skills/Skills.tsx","webpack://sam-mccathie.github.io/./src/components/experience/components/Description.tsx","webpack://sam-mccathie.github.io/./src/components/experience/components/Overview.tsx","webpack://sam-mccathie.github.io/./src/components/experience/components/RoleDesktop.tsx","webpack://sam-mccathie.github.io/./src/components/experience/components/ExperienceDesktop.tsx","webpack://sam-mccathie.github.io/./src/components/experience/components/RoleMobile.tsx","webpack://sam-mccathie.github.io/./src/components/experience/components/ExperienceMobile.tsx","webpack://sam-mccathie.github.io/./src/components/experience/Experience.tsx","webpack://sam-mccathie.github.io/./src/components/scroll-up/ScrollUp.tsx","webpack://sam-mccathie.github.io/./src/components/logo-links/LogoLinks.tsx","webpack://sam-mccathie.github.io/./src/components/footer/Footer.tsx","webpack://sam-mccathie.github.io/./src/pages/index.tsx"],"sourcesContent":["import React, { createContext, ReactNode, useState } from \"react\";\r\n\r\ninterface IThemeProvider {\r\n  children: ReactNode;\r\n}\r\n\r\ntype Theme = \"light\" | \"dark\";\r\n\r\ninterface ThemeContextProps {\r\n  theme: Theme;\r\n  toggleTheme: () => void;\r\n}\r\n\r\nexport const ThemeContext = createContext<ThemeContextProps | undefined>(\r\n  undefined\r\n);\r\n\r\nexport const ThemeProvider = ({ children }: IThemeProvider) => {\r\n  const [theme, setTheme] = useState<Theme>(\"light\");\r\n\r\n  const toggleTheme = () => {\r\n    setTheme((prev) => (prev === \"light\" ? \"dark\" : \"light\"));\r\n  };\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { ThemeContext } from \"./ThemeContext\";\r\n\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n","import React, {\r\n  createContext,\r\n  FC,\r\n  PropsWithChildren,\r\n  useContext,\r\n  useEffect,\r\n  useState,\r\n} from \"react\";\r\n\r\ninterface ScrollContextProps {\r\n  scrollTop: number;\r\n  isAtTop: boolean;\r\n}\r\n\r\n/** Scroll offset represents the padding around the app */\r\nconst SCROLL_OFFSET = 16;\r\n\r\nconst ScrollContext = createContext<ScrollContextProps | undefined>(undefined);\r\n\r\nexport const ScrollProvider: FC<PropsWithChildren> = ({ children }) => {\r\n  const [scrollData, setScrollData] = useState<ScrollContextProps>({\r\n    scrollTop: 0,\r\n    isAtTop: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleScroll = () => {\r\n      const { scrollTop } = document.documentElement;\r\n      setScrollData({\r\n        scrollTop,\r\n        isAtTop: scrollTop < SCROLL_OFFSET,\r\n      });\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    handleScroll();\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ScrollContext.Provider value={scrollData}>\r\n      {children}\r\n    </ScrollContext.Provider>\r\n  );\r\n};\r\n\r\n/**\r\n * Custom hook to access the current scroll position and state.\r\n *\r\n * Returns the scroll position (`scrollTop`) and a boolean (`isAtTop`) indicating\r\n * whether the scroll is near the top of the page.\r\n *\r\n * The `isAtTop` boolean is offset by 16px to account for the app padding\r\n *\r\n * Throws an error if used outside of a `ScrollProvider`.\r\n *\r\n * @returns {ScrollContextProps} The current scroll data.\r\n * @throws {Error} If used outside of a `ScrollProvider`.\r\n */\r\n\r\nexport const useScroll = () => {\r\n  const context = useContext(ScrollContext);\r\n  if (!context) {\r\n    throw new Error(\"useTheme must be used within a ThemeProvider\");\r\n  }\r\n  return context;\r\n};\r\n","import React from \"react\";\r\nimport \"./Button.css\";\r\nimport { ButtonProps } from \"./types\";\r\n\r\n/**\r\n * Button component can either display text or an SVG, but not both.\r\n */\r\nexport const Button: React.FC<ButtonProps> = ({\r\n  onClick,\r\n  text,\r\n  svg,\r\n  className,\r\n  ariaLabel,\r\n}) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      className={`hover-animate ${className}`}\r\n      aria-label={ariaLabel}\r\n    >\r\n      {text}\r\n      {svg}\r\n    </button>\r\n  );\r\n};\r\n","import { Button } from \"@components\";\r\nimport React, { FC, useEffect, useState } from \"react\";\r\nimport { generateNavSections, handleScroll } from \"../helpers\";\r\n\r\ninterface Section {\r\n  text: string;\r\n  id: string;\r\n  ariaLabel: string;\r\n}\r\n\r\ninterface NavButtonsProps {\r\n  customFunction?: () => void;\r\n}\r\n\r\nexport const NavButtons: FC<NavButtonsProps> = ({ customFunction }) => {\r\n  const [sections, setSections] = useState<Section[]>([]);\r\n\r\n  useEffect(() => {\r\n    setSections(generateNavSections());\r\n  }, []);\r\n\r\n  const handleOnClick = (id: string) => () => {\r\n    handleScroll(id);\r\n    customFunction && customFunction();\r\n  };\r\n\r\n  return (\r\n    <div className=\"nav-buttons\">\r\n      {sections.map(({ text, id, ariaLabel }) => (\r\n        <Button\r\n          key={text}\r\n          text={text}\r\n          onClick={handleOnClick(id)}\r\n          ariaLabel={ariaLabel}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","export const generateNavSections = () => {\r\n  const mainElement = document.querySelector(\"main\");\r\n  if (!mainElement) return [];\r\n  return Array.from(mainElement.children)\r\n    .filter((child) => child.id)\r\n    .map((child) => {\r\n      const capitalizedId =\r\n        child.id.charAt(0).toUpperCase() + child.id.slice(1);\r\n\r\n      return {\r\n        text: capitalizedId,\r\n        id: child.id,\r\n        ariaLabel: `Scroll to ${capitalizedId} section`,\r\n      };\r\n    });\r\n};\r\n","export const handleScroll = (sectionId: string) => {\r\n  const section = document.getElementById(sectionId);\r\n  if (section) {\r\n    const offset = 70;\r\n    const sectionTop = section.getBoundingClientRect().top + window.scrollY;\r\n    window.scrollTo({\r\n      top: sectionTop - offset,\r\n      behavior: \"smooth\",\r\n    });\r\n  }\r\n};\r\n","export const scrollToTop = () => {\r\n  window.scrollTo({\r\n    top: 0,\r\n    behavior: \"smooth\",\r\n  });\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LinkedInSVG = () => (\r\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M19.868 2.625H4.13203C3.3 2.625 2.625 3.3 2.625 4.13203V19.868C2.625 20.7 3.3 21.375 4.13203 21.375H19.868C20.7 21.375 21.375 20.7 21.375 19.868V4.13203C21.375 3.3 20.7 2.625 19.868 2.625ZM19.868 19.875C9.37266 19.8727 4.125 19.8703 4.125 19.868C4.12734 9.37266 4.12969 4.125 4.13203 4.125C14.6273 4.12734 19.875 4.12969 19.875 4.13203C19.8727 14.6273 19.8703 19.875 19.868 19.875ZM5.40469 9.65391H8.18672V18.6023H5.40469V9.65391ZM6.79688 8.43047C7.68516 8.43047 8.40937 7.70859 8.40937 6.81797C8.40937 6.60621 8.36767 6.39653 8.28663 6.20089C8.2056 6.00525 8.08682 5.82749 7.93708 5.67776C7.78735 5.52802 7.60959 5.40925 7.41395 5.32821C7.21831 5.24718 7.00863 5.20547 6.79688 5.20547C6.58512 5.20547 6.37544 5.24718 6.1798 5.32821C5.98416 5.40925 5.8064 5.52802 5.65667 5.67776C5.50693 5.82749 5.38815 6.00525 5.30712 6.20089C5.22608 6.39653 5.18437 6.60621 5.18437 6.81797C5.18203 7.70859 5.90391 8.43047 6.79688 8.43047ZM12.7102 14.175C12.7102 13.0078 12.9328 11.8781 14.3789 11.8781C15.8039 11.8781 15.825 13.2117 15.825 14.25V18.6023H18.6047V13.6945C18.6047 11.2852 18.0844 9.43125 15.2695 9.43125C13.9172 9.43125 13.0102 10.1742 12.6375 10.8773H12.6V9.65391H9.93047V18.6023H12.7102V14.175Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const SunSVG = () => (\r\n  <svg viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_53_4)\">\r\n      <path\r\n        d=\"M14.72 20.58C13.1658 20.58 11.6753 19.9626 10.5764 18.8636C9.47739 17.7647 8.86 16.2742 8.86 14.72C8.86 13.1658 9.47739 11.6753 10.5764 10.5764C11.6753 9.47739 13.1658 8.86 14.72 8.86C16.2742 8.86 17.7647 9.47739 18.8636 10.5764C19.9626 11.6753 20.58 13.1658 20.58 14.72C20.58 16.2742 19.9626 17.7647 18.8636 18.8636C17.7647 19.9626 16.2742 20.58 14.72 20.58ZM14.72 18.3825C15.6914 18.3825 16.6229 17.9966 17.3098 17.3098C17.9966 16.6229 18.3825 15.6914 18.3825 14.72C18.3825 13.7486 17.9966 12.8171 17.3098 12.1302C16.6229 11.4434 15.6914 11.0575 14.72 11.0575C13.7486 11.0575 12.8171 11.4434 12.1302 12.1302C11.4434 12.8171 11.0575 13.7486 11.0575 14.72C11.0575 15.6914 11.4434 16.6229 12.1302 17.3098C12.8171 17.9966 13.7486 18.3825 14.72 18.3825ZM23.0075 6.43249C23.1096 6.53453 23.1906 6.65569 23.2459 6.78904C23.3011 6.92239 23.3296 7.06533 23.3296 7.20968C23.3296 7.35403 23.3011 7.49696 23.2459 7.63031C23.1906 7.76367 23.1096 7.88482 23.0075 7.98686L21.4531 9.53976C21.3188 9.68439 21.148 9.79012 20.9587 9.84581C20.7693 9.9015 20.5685 9.90509 20.3772 9.8562C20.186 9.80731 20.0115 9.70775 19.8721 9.568C19.7328 9.42826 19.6337 9.25351 19.5853 9.06217C19.5365 8.87116 19.54 8.67054 19.5954 8.48135C19.6508 8.29215 19.7561 8.12135 19.9002 7.98686L21.4531 6.43396C21.6592 6.2282 21.9384 6.11263 22.2296 6.11263C22.5208 6.11263 22.8 6.2282 23.006 6.43396L23.0075 6.43249ZM9.53976 19.9002C9.74552 20.1063 9.86109 20.3855 9.86109 20.6767C9.86109 20.9679 9.74552 21.2471 9.53976 21.4531L7.98686 23.0075C7.88555 23.1125 7.76435 23.1963 7.63033 23.2539C7.4963 23.3115 7.35214 23.3419 7.20625 23.3433C7.06036 23.3446 6.91566 23.3169 6.78061 23.2617C6.64555 23.2065 6.52283 23.125 6.41962 23.0219C6.31641 22.9187 6.23476 22.7961 6.17945 22.6611C6.12414 22.5261 6.09628 22.3814 6.09747 22.2355C6.09867 22.0896 6.12891 21.9454 6.18643 21.8114C6.24396 21.6773 6.3276 21.556 6.43249 21.4546L7.9854 19.9002C8.08743 19.7981 8.20859 19.7171 8.34194 19.6619C8.47529 19.6066 8.61823 19.5782 8.76258 19.5782C8.90693 19.5782 9.04986 19.6066 9.18321 19.6619C9.31657 19.7171 9.43772 19.7981 9.53976 19.9002ZM14.72 3C15.0114 3 15.2909 3.11576 15.4969 3.32182C15.703 3.52787 15.8187 3.80734 15.8187 4.09875V6.29625C15.8187 6.58766 15.703 6.86713 15.4969 7.07318C15.2909 7.27924 15.0114 7.395 14.72 7.395C14.4286 7.395 14.1491 7.27924 13.9431 7.07318C13.737 6.86713 13.6213 6.58766 13.6213 6.29625V4.09875C13.6213 3.80734 13.737 3.52787 13.9431 3.32182C14.1491 3.11576 14.4286 3 14.72 3ZM7.395 14.72C7.395 15.0114 7.27924 15.2909 7.07318 15.4969C6.86713 15.703 6.58766 15.8187 6.29625 15.8187H4.09875C3.80734 15.8187 3.52787 15.703 3.32182 15.4969C3.11576 15.2909 3 15.0114 3 14.72C3 14.4286 3.11576 14.1491 3.32182 13.9431C3.52787 13.737 3.80734 13.6213 4.09875 13.6213H6.29625C6.58766 13.6213 6.86713 13.737 7.07318 13.9431C7.27924 14.1491 7.395 14.4286 7.395 14.72ZM26.44 14.72C26.44 15.0114 26.3242 15.2909 26.1182 15.4969C25.9121 15.703 25.6327 15.8187 25.3412 15.8187H23.1438C22.8523 15.8187 22.5729 15.703 22.3668 15.4969C22.1608 15.2909 22.045 15.0114 22.045 14.72C22.045 14.4286 22.1608 14.1491 22.3668 13.9431C22.5729 13.737 22.8523 13.6213 23.1438 13.6213H25.3412C25.6327 13.6213 25.9121 13.737 26.1182 13.9431C26.3242 14.1491 26.44 14.4286 26.44 14.72ZM14.72 22.045C15.0114 22.045 15.2909 22.1608 15.4969 22.3668C15.703 22.5729 15.8187 22.8523 15.8187 23.1438V25.3412C15.8187 25.6327 15.703 25.9121 15.4969 26.1182C15.2909 26.3242 15.0114 26.44 14.72 26.44C14.4286 26.44 14.1491 26.3242 13.9431 26.1182C13.737 25.9121 13.6213 25.6327 13.6213 25.3412V23.1438C13.6213 22.8523 13.737 22.5729 13.9431 22.3668C14.1491 22.1608 14.4286 22.045 14.72 22.045ZM19.9002 19.9002C20.1063 19.6945 20.3855 19.5789 20.6767 19.5789C20.9679 19.5789 21.2471 19.6945 21.4531 19.9002L23.0075 21.4531C23.2078 21.6603 23.3186 21.9378 23.3163 22.2259C23.3139 22.5139 23.1985 22.7896 22.9949 22.9934C22.7912 23.1972 22.5157 23.3129 22.2276 23.3155C21.9395 23.3182 21.6619 23.2076 21.4546 23.0075L19.9002 21.4546C19.7981 21.3526 19.7171 21.2314 19.6619 21.0981C19.6066 20.9647 19.5782 20.8218 19.5782 20.6774C19.5782 20.5331 19.6066 20.3901 19.6619 20.2568C19.7171 20.1234 19.7981 20.0023 19.9002 19.9002ZM6.43249 6.43249C6.53453 6.33039 6.65569 6.2494 6.78904 6.19413C6.92239 6.13887 7.06533 6.11043 7.20968 6.11043C7.35403 6.11043 7.49696 6.13887 7.63031 6.19413C7.76367 6.2494 7.88482 6.33039 7.98686 6.43249L9.53976 7.98686C9.73408 8.1951 9.83994 8.47067 9.83502 8.75545C9.8301 9.04024 9.71479 9.31198 9.51339 9.51339C9.31198 9.71479 9.04024 9.8301 8.75545 9.83502C8.47067 9.83994 8.1951 9.73408 7.98686 9.53976L6.43396 7.98686C6.2282 7.78084 6.11263 7.50158 6.11263 7.21041C6.11263 6.91924 6.2282 6.63998 6.43396 6.43396L6.43249 6.43249Z\"\r\n        fill=\"#2C2C2C\"\r\n      />\r\n    </g>\r\n    <defs>\r\n      <clipPath id=\"clip0_53_4\">\r\n        <rect\r\n          width=\"23.44\"\r\n          height=\"23.44\"\r\n          fill=\"white\"\r\n          transform=\"translate(3 3)\"\r\n        />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const MoonSVG = () => (\r\n  <svg viewBox=\"0 0 30 30\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      d=\"M22.8222 18.0361H22.83C23.4604 18.0355 24.0745 17.9795 24.6724 17.8681L24.6108 17.8779C23.4914 21.9045 19.8574 24.8116 15.5446 24.8116H15.488H15.4909C10.2715 24.8058 6.04171 20.576 6.03683 15.3566C6.04907 13.3031 6.724 11.3075 7.96118 9.66845C9.19836 8.02944 10.9317 6.83368 12.9032 6.2591L12.9706 6.2425C12.8637 6.82873 12.8108 7.42352 12.8123 8.01941V8.02624C12.8172 13.5533 17.2961 18.0322 22.8222 18.0371V18.0361ZM15.4782 4.1149C15.362 3.95773 15.207 3.83331 15.0285 3.75372C14.85 3.67412 14.6539 3.64206 14.4593 3.66066H14.4642C8.45163 4.23798 3.78321 9.24732 3.75 15.3546V15.3576C3.75781 21.839 9.01039 27.0916 15.4909 27.1004H15.5505C21.649 27.1004 26.6544 22.4252 27.18 16.4634L27.1829 16.4194C27.1996 16.2339 27.1706 16.0471 27.0986 15.8753C27.0266 15.7035 26.9137 15.552 26.7697 15.4338L26.7678 15.4318C26.6225 15.3118 26.4496 15.23 26.2647 15.1936C26.0798 15.1573 25.8887 15.1677 25.7088 15.2237L25.7167 15.2218L25.2048 15.3742C24.4372 15.6265 23.6341 15.7535 22.8261 15.7503H22.8193C20.7723 15.7485 18.8097 14.9345 17.3623 13.4871C15.9149 12.0397 15.101 10.0771 15.0992 8.03015V8.01257C15.0992 7.0064 15.2926 6.04517 15.6442 5.16502L15.6257 5.21679C15.6974 5.03464 15.7212 4.83711 15.6947 4.64314C15.6682 4.44916 15.5923 4.26525 15.4743 4.10903L15.4762 4.11197L15.4782 4.1149Z\"\r\n      fill=\"#FAF9F6\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\n/* Default stroke added or else svg would be invisible*/\r\n\r\nexport const HamburgerSVG = () => (\r\n  <svg\r\n    viewBox=\"0 0 25 25\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    className=\"hamburger\"\r\n    stroke=\"#2c2c2c\"\r\n  >\r\n    <path\r\n      d=\"M4.29688 19.1406H20.7031M4.29688 12.8906H20.7031M4.29688 6.64062H20.7031\"\r\n      strokeWidth=\"2\"\r\n      strokeLinecap=\"round\"\r\n      strokeLinejoin=\"round\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const EmailSVG = () => (\r\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M19 4H5C4.20435 4 3.44129 4.31607 2.87868 4.87868C2.31607 5.44129 2 6.20435 2 7V17C2 17.7956 2.31607 18.5587 2.87868 19.1213C3.44129 19.6839 4.20435 20 5 20H19C19.7956 20 20.5587 19.6839 21.1213 19.1213C21.6839 18.5587 22 17.7956 22 17V7C22 6.20435 21.6839 5.44129 21.1213 4.87868C20.5587 4.31607 19.7956 4 19 4ZM18.33 6L12 10.75L5.67 6H18.33ZM19 18H5C4.73478 18 4.48043 17.8946 4.29289 17.7071C4.10536 17.5196 4 17.2652 4 17V7.25L11.4 12.8C11.5731 12.9298 11.7836 13 12 13C12.2164 13 12.4269 12.9298 12.6 12.8L20 7.25V17C20 17.2652 19.8946 17.5196 19.7071 17.7071C19.5196 17.8946 19.2652 18 19 18Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const GitHubSVG = () => (\r\n  <svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M12 2C10.6868 2 9.38642 2.25866 8.17317 2.7612C6.95991 3.26375 5.85752 4.00035 4.92893 4.92893C3.05357 6.8043 2 9.34784 2 12C2 16.42 4.87 20.17 8.84 21.5C9.34 21.58 9.5 21.27 9.5 21V19.31C6.73 19.91 6.14 17.97 6.14 17.97C5.68 16.81 5.03 16.5 5.03 16.5C4.12 15.88 5.1 15.9 5.1 15.9C6.1 15.97 6.63 16.93 6.63 16.93C7.5 18.45 8.97 18 9.54 17.76C9.63 17.11 9.89 16.67 10.17 16.42C7.95 16.17 5.62 15.31 5.62 11.5C5.62 10.39 6 9.5 6.65 8.79C6.55 8.54 6.2 7.5 6.75 6.15C6.75 6.15 7.59 5.88 9.5 7.17C10.29 6.95 11.15 6.84 12 6.84C12.85 6.84 13.71 6.95 14.5 7.17C16.41 5.88 17.25 6.15 17.25 6.15C17.8 7.5 17.45 8.54 17.35 8.79C18 9.5 18.38 10.39 18.38 11.5C18.38 15.32 16.04 16.16 13.81 16.41C14.17 16.72 14.5 17.33 14.5 18.26V21C14.5 21.27 14.66 21.59 15.17 21.5C19.14 20.16 22 16.42 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7362 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const JavaScriptSVG = () => {\r\n  return (\r\n    <svg viewBox=\"0 0 53 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n      <path d=\"M13.157 7.26465C11.4123 7.26465 9.73904 7.95774 8.50534 9.19144C7.27164 10.4251 6.57855 12.0984 6.57855 13.8431V40.157C6.57855 41.9017 7.27164 43.575 8.50534 44.8087C9.73904 46.0424 11.4123 46.7355 13.157 46.7355H39.4709C41.2156 46.7355 42.8889 46.0424 44.1226 44.8087C45.3563 43.575 46.0494 41.9017 46.0494 40.157V13.8431C46.0494 12.0984 45.3563 10.4251 44.1226 9.19144C42.8889 7.95774 41.2156 7.26465 39.4709 7.26465H13.157ZM29.2392 35.892C30.818 37.1638 32.3939 37.7909 33.9669 37.7734C34.9318 37.7734 35.6715 37.5965 36.1861 37.2427C36.4256 37.0872 36.6206 36.872 36.7517 36.6182C36.8828 36.3644 36.9456 36.0809 36.9338 35.7955C36.9371 35.4842 36.8721 35.1759 36.7433 34.8925C36.6145 34.6091 36.425 34.3574 36.1882 34.1552C35.6737 33.7064 34.7001 33.2562 33.2674 32.8045C31.5468 32.3074 30.2201 31.6642 29.2874 30.8748C28.3723 30.0854 27.906 28.9838 27.8884 27.5702C27.8884 26.2355 28.4673 25.1179 29.6251 24.2174C30.7508 23.3168 32.1907 22.8666 33.945 22.8666C36.3893 22.8666 38.3504 23.4616 39.8283 24.6515L38.1399 27.2807C37.5319 26.808 36.8344 26.4634 36.0896 26.2677C35.4202 26.0434 34.7209 25.9214 34.0152 25.9058C33.1819 25.9058 32.5145 26.0586 32.0131 26.3641C31.5161 26.6711 31.2676 27.0732 31.2676 27.5702C31.2676 28.1169 31.5724 28.5833 32.182 28.9692C32.7959 29.3405 33.8412 29.7506 35.3177 30.1994C37.1027 30.7301 38.373 31.4376 39.1288 32.322C39.8846 33.2065 40.2625 34.3321 40.2625 35.699C40.2625 37.098 39.7238 38.3041 38.6464 39.3172C37.5851 40.3142 36.0413 40.8368 34.0152 40.885C31.3618 40.885 29.1427 40.089 27.3577 38.497L29.2392 35.892ZM17.1129 37.291C17.6275 37.6126 18.2466 37.7734 18.9702 37.7734C19.726 37.7734 20.3531 37.5563 20.8516 37.1221C21.3487 36.6719 21.5979 35.892 21.5994 34.7824V23.156H24.8557V35.4095C24.8075 37.3071 24.2607 38.6739 23.2155 39.5101C22.6436 39.9936 21.9786 40.3548 21.2617 40.5714C20.5969 40.7739 19.9063 40.8795 19.2114 40.885C18.0054 40.885 16.936 40.676 16.0033 40.2579C15.0063 39.8091 14.1701 39.0131 13.4947 37.8699L15.7621 36.0126C16.1787 36.5754 16.629 37.0015 17.1129 37.291Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const CSSSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M9.47308 6.01453L12.6189 41.6488L26.2482 45.4854L39.8775 41.6488L43.0233 6.01453H9.47308ZM36.2678 17.5637L26.2363 22.0495L26.2107 22.0594H35.9146L34.8035 35.4045L26.2502 38.0155L26.2363 38.0096V38.0155L17.6356 35.3552L17.0831 28.6353H21.3498L21.6261 32.1166L26.1969 33.3224L26.2363 33.3106V33.3165L30.9669 31.9232L31.2906 26.3144L26.2363 26.2986L16.8028 26.267L16.4811 22.0594L26.2363 17.8104L26.8047 17.5637H16.1121L15.6009 13.2614H36.6843L36.2678 17.5637Z\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ExpressSVG = () => (\r\n  <svg viewBox=\"0 0 53 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M46.1214 37.4169C44.6858 37.7821 43.798 37.4326 43.0014 36.2362C41.2132 33.557 39.2392 31.0005 37.3344 28.3968C37.0888 28.06 36.8338 27.7294 36.5158 27.3107C34.2616 30.352 32.0106 33.2484 29.898 36.2614C29.1424 37.3381 28.349 37.8073 26.9386 37.4263L35.4139 26.0513L27.5242 15.7783C28.8811 15.5138 29.8193 15.6492 30.6505 16.8645C32.486 19.5468 34.5103 22.1002 36.5284 24.8014C38.5591 22.1096 40.5583 19.5531 42.4473 16.8959C43.2061 15.8192 44.0215 15.4099 45.3847 15.8066C44.3521 17.1761 43.3415 18.5236 42.3245 19.8617C40.9519 21.6657 39.6044 23.4917 38.1813 25.2579C37.6744 25.8876 37.7563 26.2969 38.2097 26.8919C40.8417 30.352 43.4422 33.8466 46.1214 37.4169ZM6.66006 25.8624C6.88675 24.7259 7.03787 23.5673 7.3527 22.4528C9.24171 15.7059 16.9866 12.9007 22.3074 17.0817C25.4242 19.5342 26.1987 22.9911 26.0444 26.8888H8.47666C8.2122 33.8813 13.2464 38.1032 19.6627 35.9497C21.9138 35.1941 23.2393 33.431 23.9036 31.2272C24.2404 30.1221 24.7977 29.949 25.8366 30.2638C25.3046 33.0218 24.0988 35.3264 21.5801 36.7683C17.8021 38.9281 12.4089 38.2291 9.57229 35.2288C7.89736 33.4657 7.18584 31.2713 6.871 28.9006C6.82378 28.5228 6.72618 28.1513 6.65062 27.7766C6.65692 27.1386 6.66006 26.5005 6.66006 25.8624ZM8.50814 25.3933H24.3853C24.2814 20.3371 21.133 16.7448 16.8292 16.7133C12.1067 16.6755 8.71279 20.1828 8.50814 25.3933Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const NodeJSSVG = () => (\r\n  <svg viewBox=\"0 0 53 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M26.5444 46.1716C25.9809 46.1716 25.4569 46.025 24.9676 45.7713L19.9769 42.9077C19.2273 42.509 19.6029 42.364 19.8287 42.2915C20.8403 41.9652 21.0281 41.8928 22.0793 41.3111C22.1914 41.2386 22.3429 41.2749 22.455 41.3474L26.2824 43.5601C26.4307 43.6326 26.6202 43.6326 26.7322 43.5601L41.7042 35.1836C41.8524 35.1111 41.9282 34.9661 41.9282 34.7849V18.0681C41.9282 17.8869 41.8541 17.7419 41.7042 17.6694L26.7322 9.33078C26.5823 9.25828 26.3944 9.25828 26.2824 9.33078L11.3104 17.6694C11.1605 17.7419 11.0847 17.9231 11.0847 18.0681V34.7849C11.0847 34.9299 11.1605 35.1111 11.3104 35.1836L15.3998 37.4689C17.6143 38.5563 19.0016 37.2876 19.0016 36.019V19.5197C19.0016 19.3022 19.1894 19.0847 19.453 19.0847H21.3659C21.5916 19.0847 21.8157 19.2659 21.8157 19.5197V36.0173C21.8157 38.8825 20.2027 40.5499 17.3885 40.5499C16.5252 40.5499 15.8496 40.5499 13.9368 39.6437L9.99729 37.4689C9.52293 37.2074 9.12679 36.8243 8.84965 36.359C8.57252 35.8936 8.42439 35.3628 8.42052 34.8212V18.1044C8.42052 17.0169 9.02025 16.002 9.99729 15.4583L24.9692 7.08013C25.4569 6.83081 25.9967 6.70081 26.5444 6.70081C27.092 6.70081 27.6319 6.83081 28.1195 7.08013L43.0931 15.4566C44.0685 16.0004 44.6682 17.0153 44.6682 18.1027V34.8195C44.6682 35.9069 44.0685 36.9219 43.0931 37.4672L28.1211 45.8421C27.6235 46.0578 27.0868 46.1689 26.5444 46.1683M31.1594 34.6729C24.5936 34.6729 23.2425 31.7731 23.2425 29.3066C23.2425 29.0891 23.4304 28.8716 23.6923 28.8716H25.6431C25.8688 28.8716 26.055 29.0166 26.055 29.2341C26.3565 31.1552 27.2199 32.0976 31.1973 32.0976C34.3492 32.0976 35.7002 31.4089 35.7002 29.7778C35.7002 28.8353 35.3246 28.1466 30.4097 27.6754C26.3186 27.275 23.7681 26.4067 23.7681 23.2515C23.7681 20.3138 26.3186 18.5723 30.5975 18.5723C35.4003 18.5723 37.7647 20.1688 38.0646 23.6503C38.0609 23.7681 38.0212 23.8819 37.9509 23.9765C37.8767 24.049 37.7647 24.1215 37.651 24.1215H35.7002C35.6054 24.1192 35.514 24.0861 35.4397 24.0273C35.3654 23.9684 35.3122 23.887 35.2883 23.7953C34.8369 21.8016 33.6736 21.1475 30.5975 21.1475C27.1441 21.1475 26.7322 22.3075 26.7322 23.1791C26.7322 24.2302 27.2199 24.5565 31.8728 25.1364C36.4878 25.7164 38.6643 26.5501 38.6643 29.6674C38.6264 32.8605 35.9259 34.6729 31.1594 34.6729Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const PhpSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M26.386 15.4662C15.3194 15.4662 6.65062 20.1616 6.65062 26.1562C6.65062 32.1508 15.3194 36.8462 26.386 36.8462C37.4527 36.8462 46.1214 32.1508 46.1214 26.1562C46.1214 20.1616 37.4527 15.4662 26.386 15.4662ZM24.3368 18.7554H26.4913L25.8071 22.0447H27.7313C28.9516 22.0447 29.7707 22.2157 30.2377 22.6417C30.6933 23.0627 30.8314 23.7534 30.6489 24.6941L29.7937 28.6231H27.603L28.3908 24.9902C28.4851 24.4891 28.4484 24.1465 28.2806 23.9623C28.1145 23.7797 27.7478 23.6893 27.1985 23.6893H25.4733L24.4322 28.6231H22.2745L24.3368 18.7554ZM14.8737 22.0447H19.2583C21.3486 22.0447 22.6149 23.4459 22.1199 25.5362C21.5443 27.9653 20.0049 28.6231 17.1696 28.6231H15.8144L15.3852 31.0901H13.2061L14.8737 22.0447ZM32.1422 22.0447H36.5267C38.6171 22.0447 39.8834 23.4459 39.3884 25.5362C38.8128 27.9653 37.2718 28.6231 34.4381 28.6231H33.0829L32.6537 31.0901H30.4746L32.1422 22.0447ZM16.7403 23.6893L16.1203 26.9785H17.5265C18.7435 26.9785 19.875 26.8404 20.0641 25.0263C20.1348 24.3225 19.8421 23.6893 18.4359 23.6893H16.7403ZM34.0088 23.6893L33.3888 26.9785H34.795C36.012 26.9785 37.1435 26.8404 37.3326 25.0263C37.4033 24.3225 37.1122 23.6893 35.7044 23.6893H34.0088Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const ReactSVG = () => (\r\n  <svg viewBox=\"0 0 54 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M26.7215 22.9903C28.6124 22.9903 30.1545 24.5324 30.1545 26.46C30.1545 28.2959 28.6124 29.8563 26.7215 29.8563C24.8306 29.8563 23.2884 28.2959 23.2884 26.46C23.2884 24.5324 24.8306 22.9903 26.7215 22.9903ZM18.2215 41.1468C19.3781 41.8445 21.9115 40.7797 24.8306 38.0259C23.8759 36.9427 22.9396 35.7678 22.0584 34.5378C20.5791 34.3952 19.1084 34.1745 17.6524 33.8769C16.7161 37.8056 17.0649 40.5043 18.2215 41.1468ZM19.5249 30.609L18.9925 29.6728C18.7906 30.2052 18.5887 30.7376 18.4601 31.2516C18.9558 31.3617 19.5066 31.4535 20.0757 31.5453L19.5249 30.609ZM31.5314 29.2138L33.0185 26.46L31.5314 23.7062C30.9807 22.7332 30.3932 21.8704 29.8608 21.0075C28.8694 20.9525 27.823 20.9525 26.7215 20.9525C25.62 20.9525 24.5735 20.9525 23.5822 21.0075C23.0498 21.8704 22.4623 22.7332 21.9115 23.7062L20.4245 26.46L21.9115 29.2138C22.4623 30.1868 23.0498 31.0496 23.5822 31.9125C24.5735 31.9676 25.62 31.9676 26.7215 31.9676C27.823 31.9676 28.8694 31.9676 29.8608 31.9125C30.3932 31.0496 30.9807 30.1868 31.5314 29.2138ZM26.7215 16.8769C26.3727 17.2808 26.0055 17.703 25.6383 18.1987H27.8046C27.4375 17.703 27.0703 17.2808 26.7215 16.8769ZM26.7215 36.0432C27.0703 35.6393 27.4375 35.217 27.8046 34.7214H25.6383C26.0055 35.217 26.3727 35.6393 26.7215 36.0432ZM35.2031 11.7732C34.0649 11.0756 31.5314 12.1404 28.6124 14.8941C29.567 15.9773 30.5033 17.1522 31.3845 18.3823C32.8899 18.5291 34.377 18.7494 35.7906 19.0432C36.7269 15.1144 36.3781 12.4157 35.2031 11.7732ZM33.918 22.311L34.4504 23.2473C34.6524 22.7149 34.8543 22.1825 34.9828 21.6684C34.4871 21.5583 33.9364 21.4665 33.3673 21.3747L33.918 22.311ZM36.58 9.36823C39.2787 10.9103 39.5724 14.9676 38.4342 19.7041C43.0973 21.081 46.4569 23.3574 46.4569 26.46C46.4569 29.5626 43.0973 31.8391 38.4342 33.216C39.5724 37.9525 39.2787 42.0097 36.58 43.5518C33.8997 45.0939 30.2463 43.3315 26.7215 39.9719C23.1966 43.3315 19.5433 45.0939 16.8446 43.5518C14.1643 42.0097 13.8705 37.9525 15.0087 33.216C10.3457 31.8391 6.98607 29.5626 6.98607 26.46C6.98607 23.3574 10.3457 21.081 15.0087 19.7041C13.8705 14.9676 14.1643 10.9103 16.8446 9.36823C19.5433 7.82612 23.1966 9.58853 26.7215 12.9481C30.2463 9.58853 33.8997 7.82612 36.58 9.36823ZM36.0476 26.46C36.6718 27.8369 37.2226 29.2138 37.6815 30.609C41.5368 29.4525 43.7031 27.8002 43.7031 26.46C43.7031 25.1198 41.5368 23.4676 37.6815 22.311C37.2226 23.7062 36.6718 25.0831 36.0476 26.46ZM17.3954 26.46C16.7712 25.0831 16.2204 23.7062 15.7614 22.311C11.9062 23.4676 9.73985 25.1198 9.73985 26.46C9.73985 27.8002 11.9062 29.4525 15.7614 30.609C16.2204 29.2138 16.7712 27.8369 17.3954 26.46ZM33.918 30.609L33.3673 31.5453C33.9364 31.4535 34.4871 31.3617 34.9828 31.2516C34.8543 30.7376 34.6524 30.2052 34.4504 29.6728L33.918 30.609ZM28.6124 38.0259C31.5314 40.7797 34.0649 41.8445 35.2031 41.1468C36.3781 40.5043 36.7269 37.8056 35.7906 33.8769C34.377 34.1706 32.8899 34.3909 31.3845 34.5378C30.5033 35.7678 29.567 36.9427 28.6124 38.0259ZM19.5249 22.311L20.0757 21.3747C19.5066 21.4665 18.9558 21.5583 18.4601 21.6684C18.5887 22.1825 18.7906 22.7149 18.9925 23.2473L19.5249 22.311ZM24.8306 14.8941C21.9115 12.1404 19.3781 11.0756 18.2215 11.7732C17.0649 12.4157 16.7161 15.1144 17.6524 19.0432C19.1084 18.7455 20.5791 18.5249 22.0584 18.3823C22.9396 17.1522 23.8759 15.9773 24.8306 14.8941Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const TypeScriptSVG = () => (\r\n  <svg viewBox=\"0 0 53 54\">\r\n    <path d=\"M42.5252 7.26465H10.7731C9.74956 7.26465 8.76791 7.67126 8.04414 8.39503C7.32037 9.1188 6.91376 10.1004 6.91376 11.124V42.8761C6.91376 43.8997 7.32037 44.8813 8.04414 45.6051C8.76791 46.3289 9.74956 46.7355 10.7731 46.7355H42.5252C43.032 46.7355 43.5339 46.6356 44.0021 46.4417C44.4704 46.2477 44.8958 45.9635 45.2542 45.6051C45.6126 45.2467 45.8969 44.8213 46.0908 44.353C46.2848 43.8848 46.3846 43.3829 46.3846 42.8761V11.124C46.3846 10.6172 46.2848 10.1153 46.0908 9.6471C45.8969 9.17886 45.6126 8.75341 45.2542 8.39503C44.8958 8.03666 44.4704 7.75238 44.0021 7.55843C43.5339 7.36447 43.032 7.26465 42.5252 7.26465ZM29.8068 29.1929H24.873V43.3147H20.9478V29.1929H16.014V25.9914H29.8068V29.1929ZM42.5252 40.771C42.2089 41.4467 41.6971 42.012 41.056 42.3937C40.3824 42.8083 39.6396 43.098 38.8632 43.2489C37.9971 43.4247 37.1155 43.5129 36.2318 43.512C35.3274 43.5112 34.4248 43.4305 33.5346 43.2708C32.7779 43.1162 32.0419 42.8734 31.3418 42.5472V38.7974L31.2102 38.6659H31.3418V38.8194C32.0011 39.3343 32.7424 39.7346 33.5346 40.0035C34.3261 40.3026 35.1665 40.4514 36.0125 40.4421C36.4547 40.4494 36.8962 40.4052 37.3282 40.3105C37.6523 40.2336 37.9629 40.1079 38.2492 39.9377C38.473 39.8013 38.661 39.6133 38.7974 39.3895C38.9324 39.1346 38.9918 38.8465 38.9685 38.559C38.9452 38.2715 38.8402 37.9966 38.6658 37.7668C38.4615 37.4763 38.2004 37.2301 37.8983 37.0432C37.5343 36.7851 37.1449 36.5646 36.7362 36.3853L35.267 35.7714C34.1052 35.2901 33.0752 34.5383 32.2628 33.5785C31.5843 32.7607 31.2259 31.7243 31.2541 30.6621C31.2285 29.8551 31.4097 29.055 31.7804 28.3377C32.1348 27.7129 32.6304 27.1798 33.2276 26.7808C33.8942 26.3386 34.6381 26.0261 35.4205 25.8598C36.2757 25.6606 37.1518 25.5649 38.0299 25.5747C38.8294 25.5636 39.6286 25.6149 40.4201 25.7282C41.0787 25.8307 41.7252 25.9997 42.3498 26.2326V29.8507C42.0613 29.6447 41.7527 29.4684 41.4288 29.3245C41.0791 29.1771 40.7202 29.0526 40.3543 28.9517C40.0029 28.8488 39.6435 28.7755 39.2798 28.7324C38.9443 28.7014 38.6066 28.7014 38.2711 28.7324C37.858 28.7258 37.4455 28.77 37.0431 28.864C36.7127 28.9319 36.3947 29.0502 36.1002 29.2148C35.8709 29.3518 35.6759 29.5393 35.5301 29.763C35.3988 29.9814 35.3305 30.2319 35.3327 30.4866C35.3246 30.759 35.4012 31.0272 35.552 31.2541C35.7325 31.5029 35.9551 31.7181 36.2099 31.8901C36.5197 32.1353 36.8585 32.3415 37.2186 32.504L38.6001 33.118C39.234 33.3835 39.8493 33.6911 40.442 34.039C40.961 34.3249 41.434 34.6871 41.8454 35.1135C42.2469 35.5035 42.5608 35.9744 42.7664 36.495C42.9758 37.0938 43.0797 37.7245 43.0734 38.3589C43.0564 39.1777 42.8698 39.9841 42.5252 40.7271V40.771Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const GraphQLSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <g clipPath=\"url(#clip0_62_46)\">\r\n      <mask x=\"0\" y=\"0\" width=\"53\" height=\"53\">\r\n        <path d=\"M8.01086e-05 0H52.6278V52.6278H8.01086e-05V0Z\" />\r\n      </mask>\r\n      <g>\r\n        <path\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M25.7253 12.9021C26.3519 13.0917 27.019 13.102 27.6511 12.9317L38.0544 31.321C37.573 31.7852 37.2346 32.3775 37.0792 33.028H16.3942C16.2276 32.345 15.8611 31.7272 15.3417 31.2535L25.7253 12.9021ZM24.2107 11.973C24.2414 12.0059 24.2726 12.0377 24.3044 12.0684L13.8994 30.4625L13.7514 30.4263V21.0738C14.2246 20.9682 14.6705 20.765 15.0607 20.4774C15.4509 20.1897 15.7768 19.8237 16.0176 19.403C16.2578 18.9848 16.4094 18.5218 16.4632 18.0425C16.5169 17.5633 16.4716 17.0781 16.3301 16.6171L24.2107 11.973ZM30.0817 10.5998C30.1902 10.2621 30.245 9.90689 30.2461 9.53412C30.2476 9.02976 30.1403 8.53101 29.9316 8.07185C29.7229 7.61268 29.4177 7.2039 29.0368 6.87334C28.6559 6.54278 28.2081 6.29822 27.7241 6.1563C27.2402 6.01439 26.7313 5.97847 26.2321 6.05099C25.733 6.1235 25.2554 6.30275 24.8318 6.57652C24.4082 6.85029 24.0486 7.21215 23.7775 7.63744C23.5063 8.06273 23.3301 8.54147 23.2607 9.04104C23.1913 9.5406 23.2303 10.0493 23.3753 10.5324L15.4864 15.1831C15.1083 14.7949 14.6452 14.4998 14.1337 14.3209C13.6222 14.142 13.0761 14.0843 12.5385 14.1522C12.0008 14.2201 11.4863 14.4118 11.0353 14.7123C10.5843 15.0127 10.2092 15.4137 9.9394 15.8837C9.66993 16.3544 9.51259 16.8809 9.47959 17.4223C9.44658 17.9637 9.53881 18.5054 9.7491 19.0053C9.9594 19.5053 10.2821 19.9501 10.6921 20.3051C11.1022 20.6601 11.5886 20.9159 12.1135 21.0525V30.451C11.8109 30.5277 11.5176 30.6478 11.2337 30.8111C10.4284 31.2806 9.84149 32.0495 9.60089 32.95C9.36028 33.8505 9.48551 34.8096 9.94927 35.6181C10.2187 36.0871 10.5931 36.4874 11.0431 36.7875C11.4931 37.0876 12.0064 37.2794 12.543 37.3479C13.0795 37.4164 13.6246 37.3597 14.1356 37.1823C14.6465 37.0049 15.1094 36.7115 15.4881 36.3253L23.3736 40.9727C23.2804 41.2962 23.2328 41.6311 23.2322 41.9677C23.2322 43.9132 24.7978 45.4853 26.7383 45.4853C27.2998 45.4841 27.8528 45.3485 28.3511 45.0897C28.8493 44.831 29.2784 44.4566 29.6024 43.9981C29.9263 43.5395 30.1358 43.01 30.2131 42.4539C30.2905 41.8978 30.2336 41.3313 30.0472 40.8017L37.8603 36.197C38.2286 36.6132 38.6908 36.9358 39.2085 37.1379C39.7262 37.34 40.2846 37.416 40.8375 37.3594C41.3904 37.3028 41.9219 37.1154 42.3879 36.8126C42.854 36.5098 43.2412 36.1003 43.5176 35.6181C43.7946 35.1402 43.9552 34.6038 43.9862 34.0523C44.0173 33.5007 43.9179 32.9497 43.6963 32.4437C43.4746 31.9377 43.1368 31.4911 42.7103 31.1401C42.2839 30.789 41.7807 30.5433 41.2415 30.423V21.0821C41.7811 20.9616 42.2849 20.7161 42.7122 20.3653C43.1396 20.0145 43.4786 19.5683 43.7019 19.0625C43.9253 18.5568 44.0267 18.0056 43.9981 17.4535C43.9696 16.9014 43.8117 16.3637 43.5373 15.8837C43.2642 15.4095 42.8839 15.0058 42.4269 14.7048C41.9699 14.4038 41.4488 14.2139 40.9053 14.1503C40.3618 14.0867 39.8109 14.1512 39.2968 14.3385C38.7826 14.5258 38.3194 14.8308 37.9442 15.2292L30.0817 10.5998ZM29.0966 12.1407L29.22 12.0223L37.1269 16.6813C36.9978 17.134 36.9608 17.6079 37.0182 18.0751C37.0755 18.5424 37.226 18.9933 37.4607 19.4013C37.6906 19.8042 37.9985 20.1572 38.3664 20.4396C38.7344 20.722 39.1549 20.9281 39.6036 21.0459V30.4526L39.4753 30.4905L29.0966 12.1407ZM37.1466 34.9307L29.2956 39.5584C28.9687 39.2079 28.573 38.9286 28.1333 38.7379C27.6936 38.5472 27.2193 38.4492 26.74 38.45C25.7434 38.45 24.8455 38.8644 24.2074 39.5321L16.3383 34.8945C16.358 34.8309 16.3756 34.7663 16.3909 34.7005H37.0825C37.1022 34.7772 37.1225 34.854 37.1466 34.9307Z\"\r\n        />\r\n      </g>\r\n    </g>\r\n    <defs>\r\n      <clipPath>\r\n        <rect x=\"8.01086e-05\" width=\"52.6278\" height=\"52.6278\" rx=\"20\" />\r\n      </clipPath>\r\n    </defs>\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const NavArrowSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M27.6297 26.3139L17.5427 16.2269L20.6126 13.157L33.7696 26.3139L20.6126 39.4709L17.5427 36.4009L27.6297 26.3139Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const AzureSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M45.6087 40.9546L34.8986 8.82436C34.7123 8.27016 34.3498 7.79218 33.8663 7.46341C33.3828 7.13464 32.805 6.97317 32.2211 7.00364H19.5297C18.9683 7.00219 18.4208 7.1772 17.9643 7.50391C17.5079 7.83063 17.1656 8.29254 16.986 8.82436L6.14207 40.9546C6.00145 41.3689 5.96449 41.8114 6.03444 42.2432C6.10438 42.6751 6.27909 43.0833 6.54329 43.432C6.80749 43.7808 7.15311 44.0594 7.54994 44.2437C7.94676 44.4279 8.38269 44.5121 8.81959 44.4889H16.6647C17.2215 44.4848 17.7631 44.3072 18.2142 43.9809C18.6653 43.6546 19.0034 43.1957 19.1816 42.6682L20.8149 37.9022L28.8474 43.9802C29.3142 44.3183 29.8777 44.4967 30.454 44.4889H42.9848C43.4172 44.5031 43.8467 44.4123 44.2364 44.2242C44.6261 44.0361 44.9644 43.7563 45.2223 43.4089C45.4802 43.0615 45.6501 42.6567 45.7174 42.2293C45.7847 41.8019 45.7474 41.3645 45.6087 40.9546ZM30.5611 42.7218C30.3665 42.7219 30.1776 42.6558 30.0256 42.5343L14.8976 31.3155L14.6566 31.1281H22.6891L22.9033 30.5658L25.5809 23.7917L31.5785 41.5437C31.6267 41.6925 31.6357 41.8513 31.6047 42.0046C31.5737 42.1579 31.5037 42.3007 31.4014 42.4191C31.2991 42.5375 31.1681 42.6276 31.0209 42.6806C30.8737 42.7336 30.7153 42.7478 30.5611 42.7218ZM43.0651 42.7218H33.1047C33.3047 42.1497 33.3047 41.5267 33.1047 40.9546L22.2607 8.82436H32.2211C32.4102 8.82531 32.5943 8.88512 32.7478 8.99548C32.9014 9.10584 33.0168 9.26127 33.0779 9.44019L43.9219 41.5704C43.9585 41.7038 43.9643 41.8439 43.9388 41.9798C43.9132 42.1158 43.857 42.2442 43.7744 42.3552C43.6918 42.4661 43.585 42.5568 43.4621 42.6204C43.3392 42.6839 43.2034 42.7186 43.0651 42.7218Z\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const CopilotSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M45.8647 33.9786C44.4664 36.3664 36.3475 42 26.4988 42C16.6501 42 8.53116 36.3664 7.13325 33.9786C7.0455 33.8289 7.00853 33.6607 7 33.489V29.0694C7.00772 28.9213 7.03616 28.7755 7.09181 28.6377C7.69672 27.1449 9.27987 24.9773 11.3237 24.3954C11.5947 23.7117 11.9961 22.7121 12.3702 21.9745C12.3077 21.4099 12.2857 20.8276 12.2857 20.2394C12.2857 18.114 12.744 16.2498 14.1248 14.8617C14.7695 14.2136 15.5698 13.716 16.5188 13.3422C18.7918 11.5271 22.0288 10 26.4638 10C30.8989 10 34.2058 11.5271 36.4787 13.3422C37.4281 13.716 38.228 14.2136 38.8732 14.8617C40.254 16.2498 40.7123 18.114 40.7123 20.2394C40.7123 20.8276 40.6903 21.4099 40.6278 21.9745C41.0019 22.7121 41.4033 23.7117 41.6742 24.3954C43.7177 24.9773 45.3012 27.1449 45.9062 28.6377C45.9724 28.8014 46 28.9764 46 29.1525V33.4032C46 33.6044 45.9671 33.8041 45.8647 33.9786ZM26.7787 24.4098L26.6568 24.4102L26.2193 24.4098C26.0478 24.6936 25.8558 24.9645 25.6432 25.2225C24.3928 26.7348 22.5265 27.6042 19.9452 27.6042C17.1432 27.6042 15.0897 27.0311 13.8014 25.5947C13.7532 25.5404 13.7069 25.4846 13.6625 25.4273L13.5041 25.5947V36.108C15.8347 37.3532 20.8369 39.5875 26.4988 39.5875C32.1611 39.5875 37.1633 37.3532 39.4939 36.108V25.5947L39.3355 25.4273C39.3355 25.4273 39.2818 25.4996 39.1965 25.5947C37.9083 27.0311 35.8547 27.6042 33.0528 27.6042C30.4715 27.6042 28.6048 26.7348 27.3548 25.2225C27.1429 24.9658 26.9503 24.694 26.7787 24.4098ZM25.1781 19.7242C25.2471 19.1947 25.28 18.7206 25.2808 18.2973V18.2638C25.2788 17.035 25.0054 16.2355 24.5691 15.7447C24.0146 15.1209 22.8693 14.6433 20.455 14.9C18.009 15.1604 16.6419 15.757 15.8668 16.5366C15.1165 17.291 14.722 18.4195 14.722 20.2394C14.722 22.173 15.0056 23.3156 15.6287 24.0104C16.2215 24.6714 17.3886 25.2089 19.9452 25.2089C21.9102 25.2089 23.0339 24.5807 23.7521 23.7117C24.5236 22.7788 24.9575 21.4119 25.1781 19.7242ZM27.8199 19.7242C28.0405 21.4119 28.4744 22.7788 29.2458 23.7117C29.9641 24.5807 31.0874 25.2089 33.0528 25.2089C35.6089 25.2089 36.7761 24.6714 37.3688 24.0104C37.9924 23.3156 38.2756 22.173 38.2756 20.2394C38.2756 18.4195 37.8815 17.291 37.1312 16.5366C36.356 15.757 34.9886 15.1604 32.543 14.9C30.1286 14.6433 28.983 15.1209 28.4289 15.7447C27.9926 16.2355 27.7192 17.035 27.7171 18.2638V18.2973C27.7179 18.7206 27.7508 19.1947 27.8199 19.7242Z\" />\r\n    <path d=\"M22.4808 29C22.8735 29 23.2501 29.1665 23.5278 29.463C23.8055 29.7594 23.9615 30.1614 23.9615 30.5806V34.4194C23.9615 34.8386 23.8055 35.2406 23.5278 35.537C23.2501 35.8335 22.8735 36 22.4808 36C22.088 36 21.7114 35.8335 21.4337 35.537C21.156 35.2406 21 34.8386 21 34.4194V30.5806C21 30.1614 21.156 29.7594 21.4337 29.463C21.7114 29.1665 22.088 29 22.4808 29ZM30.5192 29C30.912 29 31.2886 29.1665 31.5663 29.463C31.844 29.7594 32 30.1614 32 30.5806V34.4194C32 34.8386 31.844 35.2406 31.5663 35.537C31.2886 35.8335 30.912 36 30.5192 36C30.1265 36 29.7499 35.8335 29.4722 35.537C29.1945 35.2406 29.0385 34.8386 29.0385 34.4194V30.5806C29.0385 30.1614 29.1945 29.7594 29.4722 29.463C29.7499 29.1665 30.1265 29 30.5192 29Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const DockerSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M45.3724 22.7722C45.2531 22.6927 44.2594 21.9176 42.1129 21.9176C41.5564 21.9176 40.9999 21.9772 40.4434 22.0766C40.026 19.2941 37.7006 17.883 37.6012 17.8234L37.0249 17.4855L36.6671 18.0221C36.1901 18.7376 35.8125 19.5525 35.6535 20.3873C35.256 21.9773 35.4945 23.4878 36.3094 24.7796C35.3355 25.3361 33.7455 25.4752 33.4076 25.4752H7.23225C6.5565 25.4752 6 26.0317 6 26.7274C6 29.013 6.35775 31.2986 7.15275 33.4451C8.04712 35.8102 9.39862 37.5592 11.1277 38.6325C13.0755 39.825 16.2754 40.5007 19.9125 40.5007C21.4826 40.5007 23.1124 40.3616 24.7222 40.0635C26.9482 39.666 29.0947 38.8909 31.0624 37.758C32.6919 36.8262 34.1505 35.623 35.3753 34.2004C37.4621 31.875 38.6944 29.2316 39.5887 26.946H39.9664C42.2321 26.946 43.6432 26.0317 44.4184 25.2566C44.9351 24.7796 45.3127 24.2033 45.591 23.5275L45.75 23.0505L45.3724 22.7722ZM9.67687 24.7399H13.1749C13.3339 24.7399 13.4929 24.6007 13.4929 24.4219V21.2816C13.4929 21.1226 13.3538 20.9636 13.1749 20.9636H9.67687C9.498 20.9636 9.35888 21.1027 9.35888 21.2816V24.4219C9.37875 24.6007 9.498 24.7399 9.67687 24.7399ZM14.5065 24.7399H18.0045C18.1635 24.7399 18.3225 24.6007 18.3225 24.4219V21.2816C18.3225 21.1226 18.1834 20.9636 18.0045 20.9636H14.5065C14.3276 20.9636 14.1885 21.1027 14.1885 21.2816V24.4219C14.2084 24.6007 14.3276 24.7399 14.5065 24.7399ZM19.4156 24.7399H22.8937C23.0925 24.7399 23.2316 24.6007 23.2316 24.4219V21.2816C23.2316 21.1226 23.1124 20.9636 22.8937 20.9636H19.4156C19.2566 20.9636 19.1175 21.1027 19.1175 21.2816V24.4219C19.1175 24.6007 19.2367 24.7399 19.4156 24.7399ZM24.2651 24.7399H27.783C27.942 24.7399 28.0811 24.6007 28.0811 24.4219V21.2816C28.0811 21.1226 27.9619 20.9636 27.783 20.9636H24.2651C24.1061 20.9636 23.967 21.1027 23.967 21.2816V24.4219C23.967 24.6007 24.1061 24.7399 24.2651 24.7399ZM14.5065 20.2879H18.0045C18.1635 20.2879 18.3225 20.109 18.3225 19.9301V16.8098C18.3225 16.6309 18.1834 16.4918 18.0045 16.4918H14.5065C14.3276 16.4918 14.1885 16.611 14.1885 16.8098V19.9301C14.2084 20.109 14.3276 20.2879 14.5065 20.2879ZM19.4156 20.2879H22.8937C23.0925 20.2879 23.2316 20.109 23.2316 19.9301V16.8098C23.2316 16.6309 23.1124 16.4918 22.8937 16.4918H19.4156C19.2566 16.4918 19.1175 16.611 19.1175 16.8098V19.9301C19.1175 20.109 19.2367 20.2879 19.4156 20.2879ZM24.2651 20.2879H27.783C27.942 20.2879 28.0811 20.109 28.0811 19.9301V16.8098C28.0811 16.6309 27.942 16.4918 27.783 16.4918H24.2651C24.1061 16.4918 23.967 16.611 23.967 16.8098V19.9301C23.967 20.109 24.1061 20.2879 24.2651 20.2879ZM24.2651 15.7564H27.783C27.942 15.7564 28.0811 15.6172 28.0811 15.4384V12.3379C28.0811 12.1391 27.942 12 27.783 12H24.2651C24.1061 12 23.967 12.1193 23.967 12.3379V15.4384C23.967 15.5974 24.1061 15.7564 24.2651 15.7564ZM29.1544 24.7399H32.6524C32.8312 24.7399 32.9704 24.6007 32.9704 24.4219V21.2816C32.9704 21.1226 32.8312 20.9636 32.6524 20.9636H29.1544C28.9954 20.9636 28.8562 21.1027 28.8562 21.2816V24.4219C28.8562 24.6007 28.9954 24.7399 29.1544 24.7399Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const FigmaSVG = () => (\r\n  <svg viewBox=\"0 0 54 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      opacity=\"0.6\"\r\n      d=\"M26.9796 7.00146H20.1375C18.3231 7.00146 16.5831 7.66683 15.3001 8.85118C14.0171 10.0355 13.2964 11.6419 13.2964 13.3168C13.2964 14.9917 14.0171 16.5981 15.3001 17.7824C16.5831 18.9668 18.3231 19.6321 20.1375 19.6321H26.9796V7.00146Z\"\r\n    />\r\n    <path\r\n      opacity=\"0.4\"\r\n      d=\"M26.9796 19.6322H20.137C18.3227 19.6322 16.5828 20.353 15.2999 21.6361C14.0171 22.9191 13.2964 24.6593 13.2964 26.4738C13.2964 28.2883 14.0171 30.0285 15.2999 31.3116C16.5828 32.5946 18.3227 33.3154 20.137 33.3154H26.9796V19.6322Z\"\r\n    />\r\n    <path d=\"M39.6104 26.4738C39.6104 28.2883 38.945 30.0285 37.7607 31.3116C36.5763 32.5946 34.97 33.3154 33.2951 33.3154C31.6201 33.3154 30.0138 32.5946 28.8295 31.3116C27.6451 30.0285 26.9797 28.2883 26.9797 26.4738C26.9797 24.6593 27.6451 22.9191 28.8295 21.6361C30.0138 20.353 31.6201 19.6322 33.2951 19.6322C34.97 19.6322 36.5763 20.353 37.7607 21.6361C38.945 22.9191 39.6104 24.6593 39.6104 26.4738Z\" />\r\n    <path\r\n      opacity=\"0.2\"\r\n      d=\"M20.1359 33.3173H26.9796V39.6327C26.9792 40.8815 26.5777 42.1023 25.8257 43.1406C25.0738 44.1788 24.0053 44.988 22.7552 45.4657C21.5052 45.9435 20.1297 46.0684 18.8028 45.8246C17.4758 45.5809 16.2569 44.9795 15.3003 44.0964C14.3436 43.2133 13.692 42.0882 13.4279 40.8633C13.1639 39.6384 13.2992 38.3688 13.8168 37.2149C14.3344 36.061 15.2109 35.0746 16.3357 34.3805C17.4605 33.6865 18.783 33.3177 20.1359 33.3173Z\"\r\n    />\r\n    <path\r\n      opacity=\"0.8\"\r\n      d=\"M26.9797 7.00146H33.2946C34.9696 7.00146 36.5761 7.66683 37.7605 8.85118C38.945 10.0355 39.6104 11.6419 39.6104 13.3168C39.6104 14.9917 38.945 16.5981 37.7605 17.7824C36.5761 18.9668 34.9696 19.6321 33.2946 19.6321H26.9797V7.00146Z\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const GitSVG = () => (\r\n  <svg viewBox=\"0 0 54 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M45.7028 24.6807L28.4673 7.44321C27.9901 6.96776 27.3439 6.70081 26.6703 6.70081C25.9967 6.70081 25.3505 6.96776 24.8733 7.44321L21.2952 11.0253L25.8345 15.5646C26.3697 15.3831 26.9451 15.3554 27.4953 15.4848C28.0454 15.6141 28.5483 15.8953 28.9466 16.2962C29.3449 16.6972 29.6226 17.2019 29.7483 17.7529C29.8739 18.3039 29.8424 18.8791 29.6573 19.4131L34.0328 23.7886C34.6867 23.5639 35.3978 23.57 36.0477 23.806C36.6975 24.042 37.2469 24.4936 37.6042 25.0855C37.9615 25.6774 38.1051 26.3739 38.0112 27.0588C37.9173 27.7438 37.5914 28.3759 37.0879 28.8498C36.5844 29.3236 35.9338 29.6106 35.2444 29.6629C34.555 29.7152 33.8685 29.5296 33.2993 29.1372C32.7301 28.7447 32.3126 28.169 32.1164 27.506C31.9202 26.843 31.9571 26.1329 32.2211 25.4938L28.1396 21.4124V32.1508C28.7598 32.4577 29.256 32.9678 29.5456 33.5962C29.8352 34.2245 29.9007 34.9332 29.7311 35.604C29.5615 36.2748 29.1672 36.8672 28.6138 37.2825C28.0603 37.6978 27.3813 37.9108 26.6899 37.8861C25.9984 37.8614 25.3363 37.6005 24.8139 37.1468C24.2915 36.6931 23.9404 36.074 23.8191 35.3929C23.6979 34.7117 23.8137 34.0095 24.1474 33.4034C24.4811 32.7973 25.0125 32.3238 25.6529 32.062V21.2269C25.2832 21.076 24.9471 20.8533 24.6641 20.5716C24.3811 20.29 24.1567 19.955 24.004 19.5861C23.8513 19.2172 23.7733 18.8216 23.7745 18.4223C23.7756 18.023 23.856 17.628 24.0109 17.2599L19.5367 12.7818L7.71873 24.5978C7.24268 25.0751 6.97534 25.7217 6.97534 26.3958C6.97534 27.0699 7.24268 27.7164 7.71873 28.1937L24.9542 45.4272C25.4314 45.9027 26.0776 46.1697 26.7512 46.1697C27.4248 46.1697 28.071 45.9027 28.5482 45.4272L45.7028 28.2727C46.1788 27.7954 46.4462 27.1488 46.4462 26.4747C46.4462 25.8006 46.1788 25.154 45.7028 24.6767\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const JiraSVG = () => (\r\n  <svg viewBox=\"0 0 53 54\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M25.1184 6.70081C25.1184 11.4373 29.0063 15.2857 33.7033 15.2857H37.2162V18.6407C37.2162 23.3772 41.0449 27.2059 45.7814 27.2256V8.35858C45.7814 7.91891 45.6067 7.49725 45.2958 7.18636C44.9849 6.87546 44.5633 6.70081 44.1236 6.70081H25.1184ZM15.7243 16.1738C15.7347 18.4422 16.6405 20.6148 18.2445 22.2188C19.8485 23.8229 22.0211 24.7286 24.2895 24.739H27.8419V28.1335C27.8523 30.4019 28.758 32.5744 30.362 34.1785C31.9661 35.7825 34.1386 36.6882 36.407 36.6986V17.8118C36.4019 17.379 36.2277 16.9653 35.9216 16.6592C35.6155 16.3531 35.2019 16.1789 34.769 16.1738H15.7243ZM6.31055 25.6468C6.31055 30.3833 10.159 34.212 14.8955 34.212H18.4084V37.6065C18.4281 42.3232 22.2568 46.1716 26.9735 46.1716V27.2848C26.9735 26.8452 26.7989 26.4235 26.488 26.1126C26.1771 25.8017 25.7554 25.6271 25.3157 25.6271L6.31055 25.6468Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const SlackSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M20.5525 6C20.0305 6.00013 19.5136 6.10308 19.0314 6.30296C18.5492 6.50284 18.111 6.79575 17.742 7.16495C16.9967 7.9106 16.5782 8.92176 16.5785 9.97599C16.5786 10.498 16.6815 11.0149 16.8814 11.4971C17.0813 11.9793 17.3742 12.4174 17.7434 12.7864C18.4891 13.5317 19.5002 13.9503 20.5545 13.95H24.5215V9.975C24.5215 8.92179 24.1035 7.91164 23.3594 7.16636C22.6152 6.42107 21.6057 6.00158 20.5525 6ZM20.5525 16.5993H9.975C8.92076 16.5993 7.90971 17.0181 7.16425 17.7636C6.41879 18.509 6 19.5201 6 20.5743C6 21.6286 6.41879 22.6396 7.16425 23.3851C7.90971 24.1305 8.92076 24.5493 9.975 24.5493H20.5525C21.6067 24.5493 22.6178 24.1305 23.3632 23.3851C24.1087 22.6396 24.5275 21.6286 24.5275 20.5743C24.5275 19.5201 24.1087 18.509 23.3632 17.7636C22.6178 17.0181 21.6067 16.5993 20.5525 16.5993Z\" />\r\n    <path\r\n      opacity=\"0.25\"\r\n      d=\"M45.6784 20.5742C45.6784 19.5218 45.2603 18.5125 44.5162 17.7684C43.772 17.0242 42.7628 16.6061 41.7104 16.6061C40.658 16.6061 39.6487 17.0242 38.9045 17.7684C38.1604 18.5125 37.7423 19.5218 37.7423 20.5742V24.5492H41.7114C42.7642 24.5471 43.7732 24.1274 44.517 23.3821C45.2607 22.6369 45.6784 21.627 45.6784 20.5742ZM35.0989 20.5742V9.97486C35.0989 8.92273 34.681 7.9137 33.937 7.16973C33.1931 6.42577 32.184 6.00781 31.1319 6.00781C30.0798 6.00781 29.0707 6.42577 28.3268 7.16973C27.5828 7.9137 27.1649 8.92273 27.1649 9.97486V20.5742C27.1649 21.6263 27.5828 22.6353 28.3268 23.3793C29.0707 24.1233 30.0798 24.5412 31.1319 24.5412C32.184 24.5412 33.1931 24.1233 33.937 23.3793C34.681 22.6353 35.0989 21.6263 35.0989 20.5742Z\"\r\n    />\r\n    <path\r\n      opacity=\"0.7\"\r\n      d=\"M31.132 45.75C32.1862 45.75 33.1973 45.3312 33.9427 44.5858C34.6882 43.8403 35.107 42.8293 35.107 41.775C35.107 40.7208 34.6882 39.7098 33.9427 38.9643C33.1973 38.2188 32.1862 37.8 31.132 37.8H27.1649V41.775C27.1649 42.8279 27.5826 43.8378 28.3264 44.583C29.0701 45.3282 30.0791 45.7479 31.132 45.75ZM31.132 35.1487H41.7114C42.7657 35.1487 43.7767 34.7299 44.5222 33.9845C45.2676 33.239 45.6864 32.228 45.6864 31.1737C45.6864 30.1195 45.2676 29.1084 44.5222 28.363C43.7767 27.6175 42.7657 27.1987 41.7114 27.1987H31.1339C30.0797 27.1985 29.0686 27.617 28.3229 28.3623C27.9537 28.7313 27.6608 29.1694 27.4609 29.6516C27.261 30.1339 27.1581 30.6507 27.158 31.1727C27.1578 31.6947 27.2605 32.2117 27.4602 32.694C27.6598 33.1763 27.9525 33.6146 28.3215 33.9838C29.0668 34.7294 30.0777 35.1485 31.132 35.1487Z\"\r\n    />\r\n    <path\r\n      opacity=\"0.5\"\r\n      d=\"M6.008 31.1737C6.008 31.6948 6.11063 32.2108 6.31004 32.6922C6.50946 33.1737 6.80174 33.6111 7.17021 33.9796C7.53867 34.348 7.97611 34.6403 8.45753 34.8397C8.93896 35.0391 9.45495 35.1418 9.97604 35.1418C10.4971 35.1418 11.0131 35.0391 11.4945 34.8397C11.976 34.6403 12.4134 34.348 12.7819 33.9796C13.1503 33.6111 13.4426 33.1737 13.642 32.6922C13.8414 32.2108 13.9441 31.6948 13.9441 31.1737V27.1987H9.97504C8.92219 27.2008 7.91317 27.6206 7.16943 28.3658C6.4257 29.111 6.00799 30.1209 6.008 31.1737ZM16.5875 31.1737V41.775C16.5875 42.296 16.6901 42.8119 16.8894 43.2932C17.0888 43.7745 17.381 44.2118 17.7494 44.5802C18.1177 44.9485 18.5551 45.2408 19.0364 45.4401C19.5177 45.6395 20.0335 45.7421 20.5545 45.7421C21.0755 45.7421 21.5913 45.6395 22.0726 45.4401C22.5539 45.2408 22.9913 44.9485 23.3596 44.5802C23.728 44.2118 24.0202 43.7745 24.2196 43.2932C24.4189 42.8119 24.5215 42.296 24.5215 41.775V31.1777C24.5221 30.1256 24.1046 29.1163 23.361 28.372C22.6174 27.6277 21.6086 27.2092 20.5565 27.2087C19.5044 27.2081 18.4951 27.6256 17.7508 28.3692C17.0064 29.1128 16.588 30.1216 16.5875 31.1737Z\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const TeamsSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M28.8215 19.9237C29.9375 19.7169 30.9721 19.1984 31.8058 18.4282C32.6395 17.658 33.2381 16.6676 33.5325 15.5714C33.8268 14.4753 33.8049 13.3182 33.4692 12.234C33.1335 11.1498 32.4978 10.1827 31.6355 9.44469C30.7732 8.70665 29.7197 8.22775 28.5967 8.06338C27.4736 7.89901 26.327 8.05589 25.2894 8.51586C24.2518 8.97584 23.3656 9.72012 22.7333 10.6626C22.101 11.6052 21.7483 12.7074 21.7162 13.842H24.6428C26.9508 13.842 28.8215 15.7127 28.8215 18.0207V19.9237ZM18.1511 39.1478H24.6428C26.9508 39.1478 28.8215 37.2771 28.8215 34.9691V21.869H35.7355C36.1959 21.8807 36.6329 22.0746 36.9505 22.408C37.2682 22.7415 37.4405 23.1874 37.4299 23.6478V34.3157C37.4939 37.0779 36.459 39.7526 34.5524 41.7524C32.6458 43.7521 30.0235 44.9134 27.2613 44.9811C23.2416 44.8817 19.8082 42.5216 18.1511 39.1428V39.1478ZM44.8259 15.8643C44.8259 16.4106 44.7182 16.9515 44.5092 17.4562C44.3001 17.961 43.9937 18.4196 43.6074 18.8059C43.2211 19.1922 42.7625 19.4986 42.2578 19.7077C41.753 19.9167 41.2121 20.0243 40.6658 20.0243C40.1195 20.0243 39.5785 19.9167 39.0738 19.7077C38.569 19.4986 38.1104 19.1922 37.7241 18.8059C37.3378 18.4196 37.0314 17.961 36.8223 17.4562C36.6133 16.9515 36.5057 16.4106 36.5057 15.8643C36.5057 14.7609 36.944 13.7028 37.7241 12.9226C38.5043 12.1425 39.5624 11.7042 40.6658 11.7042C41.7691 11.7042 42.8272 12.1425 43.6074 12.9226C44.3876 13.7028 44.8259 14.7609 44.8259 15.8643ZM39.2658 39.436L38.9677 39.431C39.6305 37.7993 39.9526 36.0492 39.9142 34.2884V23.6726C39.9239 23.0522 39.7966 22.4372 39.5416 21.8715H43.9936C44.9625 21.8715 45.75 22.659 45.75 23.6279V32.9816C45.7487 34.693 45.0683 36.3339 43.8581 37.5441C42.648 38.7542 41.007 39.4347 39.2956 39.436H39.2658Z\" />\r\n    <path d=\"M7.69435 16.3262H24.6428C25.5794 16.3262 26.3371 17.0839 26.3371 18.0206V34.969C26.3378 35.1916 26.2944 35.4123 26.2095 35.6181C26.1245 35.824 25.9998 36.011 25.8423 36.1685C25.6848 36.326 25.4978 36.4508 25.2919 36.5357C25.0861 36.6206 24.8654 36.664 24.6428 36.6633H7.69435C7.47166 36.664 7.25104 36.6206 7.04518 36.5357C6.83931 36.4508 6.65227 36.326 6.49481 36.1685C6.33734 36.011 6.21256 35.824 6.12765 35.6181C6.04273 35.4123 5.99935 35.1916 6.00001 34.969V18.0181C6.00001 17.0815 6.75774 16.3262 7.69435 16.3262ZM20.628 22.7757V20.9869H11.7091V22.7757H15.0804V32.0051H17.2418V22.7757H20.628Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const TrelloSVG = () => (\r\n  <svg viewBox=\"0 0 53 53\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M40.7812 6H10.9687C9.65096 6 8.38713 6.52349 7.45531 7.45531C6.52349 8.38713 6 9.65096 6 10.9687V40.7812C6 42.099 6.52349 43.3629 7.45531 44.2947C8.38713 45.2265 9.65096 45.75 10.9687 45.75H40.7812C42.099 45.75 43.3629 45.2265 44.2947 44.2947C45.2265 43.3629 45.75 42.099 45.75 40.7812V10.9687C45.75 9.65096 45.2265 8.38713 44.2947 7.45531C43.3629 6.52349 42.099 6 40.7812 6ZM23.2912 36.21C23.2912 36.8425 23.04 37.4492 22.5927 37.8964C22.1454 38.3437 21.5388 38.595 20.9062 38.595H13.5525C12.2408 38.595 11.1675 37.5218 11.1675 36.21V13.5525C11.1675 12.92 11.4188 12.3133 11.8661 11.8661C12.3133 11.4188 12.92 11.1675 13.5525 11.1675H20.9062C22.218 11.1675 23.2912 12.2408 23.2912 13.5525V36.21ZM40.5825 26.2725C40.5825 27.5842 39.5093 28.6575 38.1975 28.6575H30.8437C29.532 28.6575 28.4587 27.5842 28.4587 26.2725V13.5525C28.4587 12.2408 29.532 11.1675 30.8437 11.1675H38.1975C39.5093 11.1675 40.5825 12.2408 40.5825 13.5525V26.2725Z\" />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const CloseSVG = () => (\r\n  <svg viewBox=\"0 0 25 25\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path\r\n      fillRule=\"evenodd\"\r\n      clipRule=\"evenodd\"\r\n      d=\"M12.0001 15.1221L17.3031 20.4251C17.5845 20.7065 17.9661 20.8646 18.3641 20.8646C18.762 20.8646 19.1437 20.7065 19.4251 20.4251C19.7065 20.1437 19.8646 19.7621 19.8646 19.3641C19.8646 18.9662 19.7065 18.5845 19.4251 18.3031L14.1201 13.0001L19.4241 7.69711C19.5634 7.55778 19.6738 7.39238 19.7492 7.21036C19.8245 7.02834 19.8633 6.83326 19.8632 6.63626C19.8632 6.43926 19.8243 6.2442 19.7489 6.06221C19.6735 5.88022 19.5629 5.71488 19.4236 5.57561C19.2843 5.43634 19.1189 5.32588 18.9368 5.25054C18.7548 5.17519 18.5597 5.13644 18.3627 5.13648C18.1657 5.13653 17.9707 5.17538 17.7887 5.25081C17.6067 5.32624 17.4414 5.43678 17.3021 5.57611L12.0001 10.8791L6.69709 5.57611C6.55879 5.43278 6.39333 5.31843 6.21036 5.23973C6.02739 5.16103 5.83058 5.11956 5.63141 5.11774C5.43224 5.11591 5.23471 5.15377 5.05033 5.22911C4.86595 5.30444 4.69842 5.41574 4.55752 5.55652C4.41661 5.69729 4.30515 5.86471 4.22964 6.04902C4.15414 6.23333 4.11609 6.43083 4.11773 6.63C4.11936 6.82917 4.16065 7.02602 4.23917 7.20906C4.3177 7.3921 4.43189 7.55767 4.57509 7.69611L9.88009 13.0001L4.57609 18.3041C4.43289 18.4425 4.3187 18.6081 4.24017 18.7912C4.16165 18.9742 4.12036 19.1711 4.11873 19.3702C4.11709 19.5694 4.15514 19.7669 4.23064 19.9512C4.30615 20.1355 4.41761 20.3029 4.55852 20.4437C4.69942 20.5845 4.86695 20.6958 5.05133 20.7711C5.23571 20.8464 5.43324 20.8843 5.63241 20.8825C5.83158 20.8807 6.02839 20.8392 6.21136 20.7605C6.39433 20.6818 6.55979 20.5674 6.69809 20.4241L12.0001 15.1221Z\"\r\n    />\r\n  </svg>\r\n);\r\n","import React from \"react\";\r\nimport { useTheme } from \"@context\";\r\nimport { Button } from \"@components\";\r\nimport { MoonSVG, SunSVG } from \"@svgs\";\r\n\r\nexport const ThemeToggle = () => {\r\n  const { theme, toggleTheme } = useTheme();\r\n\r\n  if (theme === \"light\") {\r\n    return (\r\n      <Button\r\n        svg={<SunSVG />}\r\n        className=\"theme-toggle\"\r\n        ariaLabel=\"Current mode: Light\"\r\n        onClick={toggleTheme}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Button\r\n      svg={<MoonSVG />}\r\n      className=\"theme-toggle\"\r\n      ariaLabel=\"Current mode: Dark\"\r\n      onClick={toggleTheme}\r\n    />\r\n  );\r\n};\r\n","import { Button } from \"@components\";\r\nimport { scrollToTop } from \"@helpers\";\r\nimport { CloseSVG, NavArrowSVG } from \"@svgs\";\r\nimport React, { FC } from \"react\";\r\nimport \"./HamburgerMenu.css\";\r\nimport { NavButtons } from \"./NavButtons\";\r\nimport { ThemeToggle } from \"./ThemeToggle\";\r\n\r\ninterface HamburgerMenuProps {\r\n  onClick: () => void;\r\n  isHamburgerOpen: boolean;\r\n}\r\n\r\nexport const HamburgerMenu: FC<HamburgerMenuProps> = ({\r\n  isHamburgerOpen,\r\n  onClick: closeHamburger,\r\n}) => {\r\n  const active = isHamburgerOpen ? \"active\" : \"\";\r\n\r\n  const handleScrollToTop = () => {\r\n    scrollToTop();\r\n    closeHamburger();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`background-opacity ${active}`}\r\n        onClick={closeHamburger}\r\n      ></div>\r\n      <div className={`hamburger-menu ${active}`}>\r\n        <div className=\"controls\">\r\n          <ThemeToggle />\r\n          <Button\r\n            svg={<CloseSVG />}\r\n            ariaLabel=\"Close hamburger\"\r\n            onClick={closeHamburger}\r\n          />\r\n        </div>\r\n        <NavButtons customFunction={closeHamburger} />\r\n        <Button\r\n          className=\"back-to-top\"\r\n          svg={<NavArrowSVG />}\r\n          ariaLabel=\"Back to top\"\r\n          onClick={handleScrollToTop}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { Button } from \"@components\";\r\nimport { scrollToTop } from \"@helpers\";\r\nimport { HamburgerSVG } from \"@svgs\";\r\nimport React, { FC } from \"react\";\r\nimport \"./HeaderLayout.css\";\r\nimport { NavButtons } from \"./NavButtons\";\r\nimport { ThemeToggle } from \"./ThemeToggle\";\r\nimport { useScroll } from \"@context\";\r\n\r\ninterface HeaderLayoutProps {\r\n  onClick: () => void;\r\n}\r\nexport const HeaderLayout: FC<HeaderLayoutProps> = ({ onClick }) => {\r\n  const { isAtTop } = useScroll();\r\n\r\n  return (\r\n    <header data-scrolled={!isAtTop || null}>\r\n      <div className=\"header-content\">\r\n        <Button\r\n          svg={<HamburgerSVG />}\r\n          ariaLabel=\"Open hamburger menu\"\r\n          className=\"hamburger\"\r\n          onClick={onClick}\r\n        />\r\n        <Button\r\n          text=\"Sam McCathie\"\r\n          ariaLabel=\"Navigate to top of page\"\r\n          className=\"name-nav\"\r\n          onClick={scrollToTop}\r\n        />\r\n        <NavButtons />\r\n        <ThemeToggle />\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { HamburgerMenu, HeaderLayout } from \"./components\";\r\n\r\nexport const Header = () => {\r\n  const [isHamburgerOpen, setIsHamburgerOpen] = useState(false);\r\n\r\n  const toggleHamburgerMenu = () => {\r\n    setIsHamburgerOpen(!isHamburgerOpen);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // handles case where user opens the hamburger, resizes above 768px then under 768px\r\n    // - Prevents the hamburger opening on its own.\r\n    const handleResize = () => {\r\n      if (window.innerWidth > 768 && isHamburgerOpen) {\r\n        setIsHamburgerOpen(false);\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, [isHamburgerOpen]);\r\n\r\n  return (\r\n    <>\r\n      <HeaderLayout onClick={toggleHamburgerMenu} />\r\n      <HamburgerMenu\r\n        isHamburgerOpen={isHamburgerOpen}\r\n        onClick={toggleHamburgerMenu}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { useTheme } from \"@context\";\r\nimport { LogoLinks } from \"@components\";\r\n\r\nexport const Profile = () => {\r\n  const { theme } = useTheme();\r\n\r\n  // AI generate a better dark mode - ran out of tokens :(\r\n  // generate the shirt colour change and swap the faces\r\n  const profileTheme = theme === \"dark\" ? \"/profile-dark.jpg\" : \"./profile.jpg\";\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <LogoLinks />\r\n      <div className=\"frame\">\r\n        <img src={profileTheme} alt=\"profile picture\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Profile } from \"./components/Profile\";\r\nimport \"./About.css\";\r\n\r\nexport const About = () => {\r\n  return (\r\n    <div id=\"about\">\r\n      <div className=\"headline\">\r\n        <h1>1% Better Every Day</h1>\r\n        <Profile />\r\n      </div>\r\n      <p>\r\n        I’m a software engineer with expertise in React and TypeScript, skilled\r\n        in adapting to new technologies and solving complex challenges. I excel\r\n        at collaboration, clear communication, and delivering practical\r\n        solutions. I am eager to contribute to innovation and grow with a\r\n        dynamic team.\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  About,\r\n  Experience,\r\n  Footer,\r\n  Header,\r\n  ScrollUp,\r\n  Skills,\r\n} from \"@components\";\r\nimport { useTheme } from \"@context\";\r\nimport React from \"react\";\r\n\r\n/* Update location in future*/\r\nexport const Home = () => {\r\n  const { theme } = useTheme();\r\n\r\n  return (\r\n    <main className={theme}>\r\n      <Header />\r\n      <About />\r\n      <Skills />\r\n      <Experience />\r\n      <ScrollUp />\r\n      <Footer />\r\n    </main>\r\n  );\r\n};\r\n","import { ISkillData } from \"types/skill-data\";\r\nimport {\r\n  CSSSVG,\r\n  JavaScriptSVG,\r\n  NodeJSSVG,\r\n  ReactSVG,\r\n  TypeScriptSVG,\r\n  GraphQLSVG,\r\n  PhpSVG,\r\n  ExpressSVG,\r\n} from \"@svgs\";\r\nimport React from \"react\";\r\n\r\nexport const technologies: ISkillData[] = [\r\n  { skillName: \"JavaScript\", skillSVG: React.createElement(JavaScriptSVG) },\r\n  { skillName: \"TypeScript\", skillSVG: React.createElement(TypeScriptSVG) },\r\n  { skillName: \"React\", skillSVG: React.createElement(ReactSVG) },\r\n  { skillName: \"CSS\", skillSVG: React.createElement(CSSSVG) },\r\n  { skillName: \"Node.js\", skillSVG: React.createElement(NodeJSSVG) },\r\n  { skillName: \"Express.js\", skillSVG: React.createElement(ExpressSVG) },\r\n  { skillName: \"GraphQL\", skillSVG: React.createElement(GraphQLSVG) },\r\n  { skillName: \"Php\", skillSVG: React.createElement(PhpSVG) },\r\n];\r\n","import {\r\n  AzureSVG,\r\n  CopilotSVG,\r\n  DockerSVG,\r\n  FigmaSVG,\r\n  GitHubSVG,\r\n  GitSVG,\r\n  JiraSVG,\r\n  SlackSVG,\r\n  TeamsSVG,\r\n  TrelloSVG,\r\n} from \"@svgs\";\r\nimport { ISkillData } from \"@types\";\r\nimport React from \"react\";\r\n\r\nexport const tools: ISkillData[] = [\r\n  { skillName: \"Git\", skillSVG: React.createElement(GitSVG) },\r\n  { skillName: \"Figma\", skillSVG: React.createElement(FigmaSVG) },\r\n  { skillName: \"Docker\", skillSVG: React.createElement(DockerSVG) },\r\n  { skillName: \"Github\", skillSVG: React.createElement(GitHubSVG) },\r\n  { skillName: \"Azure\", skillSVG: React.createElement(AzureSVG) },\r\n  { skillName: \"Copilot\", skillSVG: React.createElement(CopilotSVG) },\r\n  { skillName: \"Jira\", skillSVG: React.createElement(JiraSVG) },\r\n  { skillName: \"Trello\", skillSVG: React.createElement(TrelloSVG) },\r\n  { skillName: \"Teams\", skillSVG: React.createElement(TeamsSVG) },\r\n  { skillName: \"Slack\", skillSVG: React.createElement(SlackSVG) },\r\n];\r\n","export interface Role {\r\n  companyName: string;\r\n  role: string;\r\n  companyLogoPath: string;\r\n  employmentPeriod: string;\r\n  roleDescription: string[];\r\n}\r\n\r\nexport const roles: Role[] = [\r\n  {\r\n    companyName: \"Advice Link\",\r\n    role: \"Software Engineer\",\r\n    companyLogoPath: \"/advice-link-logo.png\",\r\n    employmentPeriod: \"May 2025 - Present\",\r\n    roleDescription: [\r\n      \"Advice Link is part of the NZHL umbrella and a subsidiary of KiwiBank. The application is used by mortgage advisors and insurance brokers across New Zealand.\",\r\n      \"Tech Stack - React, TypeScript, Tailwind, Base UI, Mantine, and other third party libraries.\",\r\n      \"Navigated shifting priorities and delivered production ready components under tight deadlines.\",\r\n      \"Built scalable, reusable, themeable, data driven components.\",\r\n      \"Developed a modern Client Portal.\",\r\n      \"Contributed to evolving design systems and improving UI/UX across the application.\",\r\n      \"Presented to both technical and non-technical senior stakeholders, translating complex technical concepts into easy to understand language.\",\r\n      \"Independently completed sprint planning and provided reliable estimates.\",\r\n      \"Advocated for AI-based tools to speed up routine development tasks, which saved countless hours of developer time.\",\r\n    ],\r\n  },\r\n  {\r\n    companyName: \"Stuff\",\r\n    role: \"Software Engineer\",\r\n    companyLogoPath: \"/stuff-logo.png\",\r\n    employmentPeriod: \"Jul 2023 - Dec 2024\",\r\n    roleDescription: [\r\n      \"Stuff is the most popular media company in New Zealand, reaching millions of users every month.\",\r\n      \"Tech Stack - React, TypeScript, many third party tools, plugins and services.\",\r\n      \"Developed scalable, reusable components for the Stuff replatform and Masthead sites (The Post, Press, and Waikato Times).\",\r\n      \"Refactored code in third party tools to enable stakeholders to make updates independently.\",\r\n      \"Collaborated with Product Owners, Designers, QA, Solution Architects, and Stakeholders to align on project goals and deliverables.\",\r\n      \"Conducted pair programming sessions and reviewed pull requests to maintain high code quality.\",\r\n      \"Created documentation for niche tools to facilitate knowledge sharing.\",\r\n      \"Participated in sprint planning, stand-ups, and retrospectives as part of an Agile team.\",\r\n    ],\r\n  },\r\n  {\r\n    companyName: \"Fergus\",\r\n    role: \"Software Engineer\",\r\n    companyLogoPath: \"/fergus-logo.png\",\r\n    employmentPeriod: \"May 2022 - July 2023\",\r\n    roleDescription: [\r\n      \"Fergus is a job management software for tradies which covers job tracking, invoicing, and reporting all in one place.\",\r\n      \"Tech Stack - React Native, TypeScript, GraphQL, Docker, PHP, and Postgres.\",\r\n      \"Built clean, reusable, and testable components in line with best practices.\",\r\n      \"Led standups and facilitated quarterly retrospective reviews.\",\r\n      \"Collaborated in pair programming sessions and peer code reviews, giving and applying constructive feedback.\",\r\n      \"Contributed to the Modern Fergus Go Mobile App and Web App Monolith.\",\r\n      \"Built new features, maintained legacy code, resolved bugs, created and updated APIs.\",\r\n      \"Collaborated closely with the Product Manager, Designer, and QA Tester.\",\r\n      \"Participated in technical and design reviews (1 on 1 and in groups).\",\r\n    ],\r\n  },\r\n  {\r\n    companyName: \"Dacreed\",\r\n    role: \"Full Stack Developer\",\r\n    companyLogoPath: \"/dacreed-logo.png\",\r\n    employmentPeriod: \"Jul 2021 - Apr 2022\",\r\n    roleDescription: [\r\n      \"Dacreed is a learning experience platform for regulated industries like financial services and education.\",\r\n      \"Tech Stack - React, Gatsby, Node.js, Scala, and the Play framework.\",\r\n      \"Developed, maintained and contributed several Dacreed products (Dacreed App and multiple static blog sites).\",\r\n      \"Collaborated with UX designers and the core development team while also independently developing and testing features to support focused reading and content accessibility.\",\r\n    ],\r\n  },\r\n  {\r\n    companyName: \"Mission Ready\",\r\n    role: \"Student\",\r\n    companyLogoPath: \"/mission-ready-logo.png\",\r\n    employmentPeriod: \"Feb 2021 - Oct 2021\",\r\n    roleDescription: [\r\n      \"Mission Ready’s Full Stack Developer Accelerator is a fast-paced, immersive training programme designed to launch careers in full-stack development.\",\r\n      \"Learned the essential full stack developer skills for both the front and backend of software development with a primary focus on developing my skills with React, JavaScript, CSS, Node.js, MySQL, and Githhub.\",\r\n      \"Created chatbots with IBM Watson and an application that can detect different types of vehicles using AWS AI from an image uploaded to AWS S3 Bucket.\",\r\n      \"Collaborated with UX designers on MVP's and Website redesigns while utilising agile methodologies and leveraging Trello and Miro.\",\r\n    ],\r\n  },\r\n];\r\n","import { ISkillData } from \"@types\";\r\nimport React, { FC } from \"react\";\r\nimport \"./SkillIcon.css\";\r\n\r\nexport const SkillIcon: FC<ISkillData> = ({ skillName, skillSVG }) => {\r\n  return (\r\n    <div className=\"skill-icon\">\r\n      <span>{skillName}</span>\r\n      {skillSVG}\r\n    </div>\r\n  );\r\n};\r\n","import { technologies } from \"@data\";\r\nimport React from \"react\";\r\nimport { SkillIcon } from \"./SkillIcon\";\r\nimport \"./SkillIcons.css\";\r\n\r\nexport const SkillIcons = () => {\r\n  return (\r\n    <div className=\"skill-icons\">\r\n      {technologies.map((data, key) => (\r\n        <SkillIcon\r\n          key={key}\r\n          skillName={data.skillName}\r\n          skillSVG={data.skillSVG}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@components\";\r\nimport { tools } from \"@data\";\r\nimport { NavArrowSVG } from \"@svgs\";\r\nimport { SkillIcon } from \"./SkillIcon\";\r\nimport \"./Carousel.css\";\r\n\r\nconst itemWidth = 72; // .skill-icon width + .content gap\r\n\r\nexport const Carousel = () => {\r\n  const [currentIndex, setCurrentIndex] = useState(0); // Tracks the starting index of visible items in dynamicArray\r\n  const [visibleItems, setVisibleItems] = useState(2);\r\n\r\n  // Variables for swipe detection\r\n  const [startX, setStartX] = useState<number | null>(null);\r\n  const [endX, setEndX] = useState<number | null>(null);\r\n\r\n  // Swipe handlers\r\n  const onTouchStart = (e: React.TouchEvent) => {\r\n    setStartX(e.touches[0].clientX);\r\n  };\r\n\r\n  const onTouchMove = (e: React.TouchEvent) => {\r\n    setEndX(e.touches[0].clientX);\r\n  };\r\n\r\n  const onTouchEnd = () => {\r\n    if (startX !== null && endX !== null) {\r\n      const diff = startX - endX;\r\n      if (diff > 50) {\r\n        // Swipe left\r\n        onNext();\r\n      } else if (diff < -50) {\r\n        // Swipe right\r\n        onPrevious();\r\n      }\r\n    }\r\n    // Reset swipe state\r\n    setStartX(null);\r\n    setEndX(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      // Ensure this code only runs in the browser\r\n      const handleResize = () => {\r\n        setVisibleItems(window.innerWidth >= 540 ? 4 : 2);\r\n      };\r\n\r\n      handleResize(); // Set initial value based on current window size\r\n      window.addEventListener(\"resize\", handleResize);\r\n      return () => {\r\n        window.removeEventListener(\"resize\", handleResize);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const onNext = () => {\r\n    setCurrentIndex((prevIndex) => {\r\n      const nextIndex = prevIndex + 1;\r\n      // Check if there are enough items to fill the visible area\r\n      if (nextIndex + visibleItems > tools.length) {\r\n        return 0; // Reset to the start\r\n      }\r\n      return nextIndex;\r\n    });\r\n  };\r\n\r\n  const onPrevious = () => {\r\n    setCurrentIndex((prevIndex) => {\r\n      const prevIndexAdjusted = prevIndex - 1;\r\n      // Check if going back leaves enough items to fill the visible area\r\n      if (prevIndexAdjusted < 0) {\r\n        return Math.max(tools.length - visibleItems, 0); // Jump to the last set of items\r\n      }\r\n      return prevIndexAdjusted;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"carousel\"\r\n      onTouchStart={onTouchStart}\r\n      onTouchMove={onTouchMove}\r\n      onTouchEnd={onTouchEnd}\r\n    >\r\n      <Button\r\n        svg={<NavArrowSVG />}\r\n        onClick={onPrevious}\r\n        ariaLabel=\"Navigate previous tool\"\r\n        className=\"previous\"\r\n      />\r\n      <div className=\"content\">\r\n        <div\r\n          className=\"items\"\r\n          style={{\r\n            transform: `translateX(-${currentIndex * itemWidth}px)`,\r\n          }}\r\n        >\r\n          {tools.map((data, index) => (\r\n            <SkillIcon\r\n              key={index}\r\n              skillName={data.skillName}\r\n              skillSVG={data.skillSVG}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <Button\r\n        svg={<NavArrowSVG />}\r\n        onClick={onNext}\r\n        ariaLabel=\"Navigate next tool\"\r\n        className=\"next\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { SkillIcons } from \"./components/SkillIcons\";\r\nimport { Carousel } from \"./components/Carousel\";\r\n\r\nexport const Skills = () => {\r\n  return (\r\n    <div id=\"skills\" className=\"container\">\r\n      <h2>Skills</h2>\r\n      <h3>Technologies & Frameworks</h3>\r\n      <SkillIcons />\r\n      <h3>Tools & Utilities</h3>\r\n      <Carousel />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC } from \"react\";\r\n\r\ninterface DescriptionProps {\r\n  roleDescription: string[];\r\n  className?: string;\r\n  onClick?: () => void;\r\n}\r\n\r\nexport const Description: FC<DescriptionProps> = ({\r\n  roleDescription,\r\n  className = \"\",\r\n  onClick,\r\n}) => (\r\n  <div className={`description ${className}`} onClick={onClick}>\r\n    <ul>\r\n      {roleDescription.map((description, index) => (\r\n        <li key={index}>{description}</li>\r\n      ))}\r\n    </ul>\r\n  </div>\r\n);\r\n","import React, { FC } from \"react\";\r\nimport { Role } from \"data/roles\";\r\nimport { NavArrowSVG } from \"@svgs\";\r\n\r\ninterface OverviewProps extends Omit<Role, \"roleDescription\"> {\r\n  isActive?: boolean;\r\n}\r\n\r\nexport const Overview: FC<OverviewProps> = ({\r\n  companyName,\r\n  role,\r\n  companyLogoPath,\r\n  employmentPeriod,\r\n  isActive = false,\r\n}) => (\r\n  <div className=\"overview\">\r\n    <img src={companyLogoPath} alt={`${companyName} logo`} />\r\n    <div className=\"details\">\r\n      <h4>{companyName}</h4>\r\n      <p className=\"position\">{role}</p>\r\n      <p className=\"duration\">{employmentPeriod}</p>\r\n    </div>\r\n    <button className=\"toggle-arrow\" disabled={isActive}>\r\n      <NavArrowSVG />\r\n    </button>\r\n  </div>\r\n);\r\n","import { Role } from \"data/roles\";\r\nimport React, { FC } from \"react\";\r\nimport { Overview } from \"./Overview\";\r\n\r\ninterface RoleProps extends Role {\r\n  isActive: boolean;\r\n  onClick: () => void;\r\n}\r\n\r\nexport const RoleDesktop: FC<RoleProps> = (props) => (\r\n  <div\r\n    className={`role container hover-animate ${props.isActive ? \"active\" : \"\"}`}\r\n    onClick={props.onClick}\r\n  >\r\n    <Overview {...props} />\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { roles } from \"@data\";\r\nimport { Description } from \"./Description\";\r\nimport { RoleDesktop } from \"./RoleDesktop\";\r\nimport \"./ExperienceDesktop.css\";\r\n\r\nexport const ExperienceDesktop = () => {\r\n  const [activeDescriptionIndex, setActiveDescriptionIndex] = useState(0);\r\n\r\n  const changeDescription = (descriptionIndex: number) => () => {\r\n    setActiveDescriptionIndex(descriptionIndex);\r\n  };\r\n\r\n  const description = roles[activeDescriptionIndex].roleDescription;\r\n  return (\r\n    <div className=\"experience-desktop\">\r\n      <div className=\"roles\">\r\n        {roles.map((role, index) => (\r\n          <RoleDesktop\r\n            key={index}\r\n            {...role}\r\n            isActive={activeDescriptionIndex === index}\r\n            onClick={changeDescription(index)}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      <Description roleDescription={description} className=\"container\" />\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useState } from \"react\";\r\nimport { Role as RoleProps } from \"data/roles\";\r\nimport { Description } from \"./Description\";\r\nimport { NavArrowSVG } from \"@svgs\";\r\nimport { Overview } from \"./Overview\";\r\n\r\nexport const RoleMobile: FC<RoleProps> = ({ roleDescription, ...rest }) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggleRole = (event: React.MouseEvent) => {\r\n    event?.stopPropagation();\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  const containerState = isOpen ? \"open\" : \"closed\";\r\n\r\n  return (\r\n    <div\r\n      className={`role container hover-animate mobile ${containerState}`}\r\n      onClick={toggleRole}\r\n    >\r\n      <Overview {...rest} />\r\n      <Description roleDescription={roleDescription} />\r\n      <button className=\"close-arrow\" onClick={toggleRole}>\r\n        <NavArrowSVG />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { roles } from \"@data\";\r\nimport { RoleMobile } from \"./RoleMobile\";\r\nimport \"./ExperienceMobile.css\";\r\n\r\nexport const ExperienceMobile = () => (\r\n  <div className=\"roles experience-mobile\">\r\n    {roles.map((role, index) => (\r\n      <RoleMobile key={index} {...role} />\r\n    ))}\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport { ExperienceDesktop, ExperienceMobile } from \"./components\";\r\nimport \"./Experience.css\";\r\n\r\nexport const Experience = () => {\r\n  return (\r\n    <div id=\"experience\">\r\n      <h2>Experience</h2>\r\n      <ExperienceMobile />\r\n      <ExperienceDesktop />\r\n    </div>\r\n  );\r\n};\r\n","import { Button } from \"@components\";\r\nimport { scrollToTop } from \"@helpers\";\r\nimport React from \"react\";\r\nimport { NavArrowSVG } from \"@svgs\";\r\nimport \"./ScrollUp.css\";\r\n\r\nexport const ScrollUp = () => {\r\n  return (\r\n    <div className=\"scroll-up\">\r\n      <Button\r\n        text=\"Scroll up\"\r\n        svg={<NavArrowSVG />}\r\n        ariaLabel=\"Scroll to top\"\r\n        onClick={scrollToTop}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { EmailSVG, GitHubSVG, LinkedInSVG } from \"@svgs\";\r\nimport React from \"react\";\r\nimport \"./LogoLinks.css\";\r\n\r\nexport const LogoLinks = () => {\r\n  return (\r\n    <div className=\"logo-links\">\r\n      <a\r\n        className=\"hover-animate\"\r\n        href=\"https://www.linkedin.com/in/sam-mccathie-nz/\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <LinkedInSVG />\r\n      </a>\r\n      <a\r\n        className=\"hover-animate\"\r\n        href=\"https://github.com/Sam-McCathie\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >\r\n        <GitHubSVG />\r\n      </a>\r\n      <a\r\n        className=\"hover-animate\"\r\n        href=\"mailto:dev.sammccathie@gmail.com?subject=Hello%20Sam!\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n        aria-label=\"Send an email to Sam McCathie\"\r\n      >\r\n        <EmailSVG />\r\n      </a>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { LogoLinks } from \"@components\";\r\nimport \"./Footer.css\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <footer>\r\n      <LogoLinks />\r\n      <a\r\n        href=\"https://github.com/Sam-McCathie/sam-mccathie.github.io\"\r\n        target=\"_blank\"\r\n        rel=\"noopener noreferrer\"\r\n      >{`<Source Code />`}</a>\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\nimport { type HeadFC } from \"gatsby\";\nimport { ScrollProvider, ThemeProvider } from \"@context\";\nimport { Home } from \"@components\";\n\nconst IndexPage = () => {\n  /* For some reason, I cannot pass the provider in gatsby-browser, it should work but it doesn't :(\n   * Will revist this later.\n   */\n\n  return (\n    <ScrollProvider>\n      <ThemeProvider>\n        <Home />\n      </ThemeProvider>\n    </ScrollProvider>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n"],"names":["ThemeContext","createContext","undefined","ThemeProvider","_ref","children","theme","setTheme","useState","React","Provider","value","toggleTheme","prev","useTheme","context","useContext","Error","ScrollContext","ScrollProvider","scrollData","setScrollData","scrollTop","isAtTop","useEffect","handleScroll","document","documentElement","window","addEventListener","removeEventListener","Button","onClick","text","svg","className","ariaLabel","NavButtons","customFunction","sections","setSections","generateNavSections","mainElement","querySelector","Array","from","filter","child","id","map","capitalizedId","charAt","toUpperCase","slice","handleOnClick","sectionId","section","getElementById","offset","sectionTop","getBoundingClientRect","top","scrollY","scrollTo","behavior","_ref2","key","scrollToTop","LinkedInSVG","viewBox","xmlns","d","SunSVG","clipPath","fill","width","height","transform","MoonSVG","HamburgerSVG","stroke","strokeWidth","strokeLinecap","strokeLinejoin","EmailSVG","GitHubSVG","JavaScriptSVG","CSSSVG","fillRule","clipRule","ExpressSVG","NodeJSSVG","PhpSVG","ReactSVG","TypeScriptSVG","GraphQLSVG","x","y","rx","NavArrowSVG","AzureSVG","CopilotSVG","DockerSVG","FigmaSVG","opacity","GitSVG","JiraSVG","SlackSVG","TeamsSVG","TrelloSVG","CloseSVG","ThemeToggle","HamburgerMenu","isHamburgerOpen","closeHamburger","active","handleScrollToTop","HeaderLayout","useScroll","Header","setIsHamburgerOpen","toggleHamburgerMenu","handleResize","innerWidth","Profile","profileTheme","LogoLinks","src","alt","About","Home","Skills","Experience","ScrollUp","Footer","technologies","skillName","skillSVG","tools","roles","companyName","role","companyLogoPath","employmentPeriod","roleDescription","SkillIcon","SkillIcons","data","Carousel","currentIndex","setCurrentIndex","visibleItems","setVisibleItems","startX","setStartX","endX","setEndX","onNext","prevIndex","nextIndex","length","onPrevious","prevIndexAdjusted","Math","max","onTouchStart","e","touches","clientX","onTouchMove","onTouchEnd","diff","style","index","Description","description","Overview","isActive","disabled","RoleDesktop","props","ExperienceDesktop","activeDescriptionIndex","setActiveDescriptionIndex","Object","assign","descriptionIndex","RoleMobile","rest","isOpen","setIsOpen","toggleRole","event","stopPropagation","containerState","ExperienceMobile","href","target","rel","IndexPage","Head"],"sourceRoot":""}